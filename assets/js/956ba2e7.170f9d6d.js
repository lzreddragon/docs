"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[2536],{2089:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"guides/configuration","title":"Configuration Guide","description":"This guide explains how to configure the OmniDragon protocol for various deployment environments and use cases.","source":"@site/docs/guides/configuration.md","sourceDirName":"guides","slug":"/guides/configuration","permalink":"/guides/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/guides/configuration.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Configuration Guide"},"sidebar":"guides","previous":{"title":"Installation Guide","permalink":"/guides/installation"},"next":{"title":"Development Guide","permalink":"/guides/development"}}');var t=i(4848),s=i(8453);const a={sidebar_position:4,title:"Configuration Guide"},o="Configuration Guide",c={},d=[{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Network Configuration",id:"network-configuration",level:2},{value:"Contract Parameters",id:"contract-parameters",level:2},{value:"Fee Configuration",id:"fee-configuration",level:2},{value:"Fee Parameters",id:"fee-parameters",level:3},{value:"Distribution Configuration",id:"distribution-configuration",level:3},{value:"Jackpot Configuration",id:"jackpot-configuration",level:2},{value:"Cross-Chain Configuration",id:"cross-chain-configuration",level:2},{value:"Randomness Configuration",id:"randomness-configuration",level:2},{value:"Gas Optimization",id:"gas-optimization",level:2},{value:"Multi-Chain Deployment",id:"multi-chain-deployment",level:2},{value:"Contract Verification",id:"contract-verification",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mermaid:"mermaid",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"configuration-guide",children:"Configuration Guide"})}),"\n",(0,t.jsx)(e.p,{children:"This guide explains how to configure the OmniDragon protocol for various deployment environments and use cases."}),"\n",(0,t.jsx)(e.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["OmniDragon uses environment variables for configuration. Create an ",(0,t.jsx)(e.code,{children:".env"})," file based on the example:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Network configuration\nMAINNET_RPC_URL=https://mainnet.infura.io/v3/YOUR_API_KEY\nARBITRUM_RPC_URL=https://arbitrum-mainnet.infura.io/v3/YOUR_API_KEY\nBSC_RPC_URL=https://bsc-dataseed.binance.org\n\n# Deployment accounts\nDEPLOYER_PRIVATE_KEY=your_deployer_private_key\nOWNER_ADDRESS=0xOwnerAddress\nFEE_COLLECTOR_ADDRESS=0xFeeCollectorAddress\n\n# Contract settings\nTOKEN_NAME=OmniDragon\nTOKEN_SYMBOL=OMNI\nINITIAL_SUPPLY=1000000000000000000000000000\n"})}),"\n",(0,t.jsx)(e.h2,{id:"network-configuration",children:"Network Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["OmniDragon supports multiple networks defined in ",(0,t.jsx)(e.code,{children:"hardhat.config.js"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'require("dotenv").config();\nrequire("@nomicfoundation/hardhat-toolbox");\nrequire("@openzeppelin/hardhat-upgrades");\n\n/** @type import(\'hardhat/config\').HardhatUserConfig */\nmodule.exports = {\n  solidity: {\n    version: "0.8.19",\n    settings: {\n      optimizer: {\n        enabled: true,\n        runs: 200\n      }\n    }\n  },\n  networks: {\n    hardhat: {\n      // Local development settings\n    },\n    arbitrum: {\n      url: process.env.ARBITRUM_RPC_URL,\n      accounts: [process.env.DEPLOYER_PRIVATE_KEY],\n      chainId: 42161\n    },\n    bsc: {\n      url: process.env.BSC_RPC_URL,\n      accounts: [process.env.DEPLOYER_PRIVATE_KEY],\n      chainId: 56\n    },\n    ethereum: {\n      url: process.env.MAINNET_RPC_URL,\n      accounts: [process.env.DEPLOYER_PRIVATE_KEY],\n      chainId: 1\n    }\n  },\n  etherscan: {\n    apiKey: {\n      arbitrumOne: process.env.ARBISCAN_API_KEY,\n      bsc: process.env.BSCSCAN_API_KEY,\n      mainnet: process.env.ETHERSCAN_API_KEY\n    }\n  }\n};\n'})}),"\n",(0,t.jsx)(e.h2,{id:"contract-parameters",children:"Contract Parameters"}),"\n",(0,t.jsx)(e.p,{children:"The OmniDragon protocol can be configured through parameters in deployment scripts:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'// scripts/deploy.js\nasync function main() {\n  // Deploy parameters\n  const tokenParams = {\n    name: process.env.TOKEN_NAME || "OmniDragon",\n    symbol: process.env.TOKEN_SYMBOL || "OMNI",\n    initialSupply: process.env.INITIAL_SUPPLY || ethers.utils.parseEther("1000000000"),\n    feeConfig: {\n      buyFeePercent: 1000, // 10.00%\n      sellFeePercent: 1000, // 10.00%\n      transferFeePercent: 200, // 2.00%\n      feeDecimals: 2\n    }\n  };\n  \n  // Deploy contracts\n  // ...implementation...\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"fee-configuration",children:"Fee Configuration"}),"\n",(0,t.jsx)(e.p,{children:"The OmniDragon token includes a flexible fee system that can be configured:"}),"\n",(0,t.jsx)(e.mermaid,{value:'flowchart TB\n    %% Fee configuration\n    subgraph FeeConfig ["Fee Configuration"]\n        direction TB\n        BUY_FEE["Buy Fee (%)"]:::param\n        SELL_FEE["Sell Fee (%)"]:::param\n        TRANSFER_FEE["Transfer Fee (%)"]:::param\n        FEE_DECIMALS["Fee Decimals"]:::param\n    end\n    \n    subgraph Distributions ["Distribution Configuration"]\n        direction TB\n        JACKPOT_SHARE["Jackpot Share (%)"]:::dist\n        LIQUIDITY_SHARE["Liquidity Share (%)"]:::dist\n        MARKETING_SHARE["Marketing Share (%)"]:::dist\n        DEV_SHARE["Development Share (%)"]:::dist\n        STAKING_SHARE["Staking Share (%)"]:::dist\n    end\n    \n    subgraph Recipients ["Recipient Configuration"]\n        direction TB\n        JACKPOT_VAULT["Jackpot Vault Address"]:::addr\n        LIQUIDITY_WALLET["Liquidity Wallet"]:::addr\n        MARKETING_WALLET["Marketing Wallet"]:::addr\n        DEV_WALLET["Development Wallet"]:::addr\n        STAKING_CONTRACT["Staking Contract"]:::addr\n    end\n    \n    FeeConfig --\x3e Distributions\n    Distributions --\x3e Recipients\n    \n    %% Styling\n    classDef param fill:#e3f2fd,stroke:#1e88e5,color:#0d47a1\n    classDef dist fill:#e8f5e9,stroke:#43a047,color:#1b5e20\n    classDef addr fill:#f3e5f5,stroke:#8e24aa,color:#4a148c\n    \n    %% Style subgraphs\n    style FeeConfig fill:#e3f2fd,stroke:#bbdefb,color:#1565c0\n    style Distributions fill:#e8f5e9,stroke:#c8e6c9,color:#2e7d32\n    style Recipients fill:#f3e5f5,stroke:#e1bee7,color:#6a1b9a'}),"\n",(0,t.jsx)(e.h3,{id:"fee-parameters",children:"Fee Parameters"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Parameter"}),(0,t.jsx)(e.th,{children:"Description"}),(0,t.jsx)(e.th,{children:"Default"}),(0,t.jsx)(e.th,{children:"Range"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"buyFeePercent"})}),(0,t.jsx)(e.td,{children:"Fee applied to buy transactions"}),(0,t.jsx)(e.td,{children:"1000 (10.00%)"}),(0,t.jsx)(e.td,{children:"0-3000 (0-30%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"sellFeePercent"})}),(0,t.jsx)(e.td,{children:"Fee applied to sell transactions"}),(0,t.jsx)(e.td,{children:"1000 (10.00%)"}),(0,t.jsx)(e.td,{children:"0-3000 (0-30%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"transferFeePercent"})}),(0,t.jsx)(e.td,{children:"Fee applied to transfer transactions"}),(0,t.jsx)(e.td,{children:"200 (2.00%)"}),(0,t.jsx)(e.td,{children:"0-1000 (0-10%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"feeDecimals"})}),(0,t.jsx)(e.td,{children:"Decimal precision for fee calculations"}),(0,t.jsx)(e.td,{children:"2"}),(0,t.jsx)(e.td,{children:"1-4"})]})]})]}),"\n",(0,t.jsx)(e.h3,{id:"distribution-configuration",children:"Distribution Configuration"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Parameter"}),(0,t.jsx)(e.th,{children:"Description"}),(0,t.jsx)(e.th,{children:"Default"}),(0,t.jsx)(e.th,{children:"Range"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"jackpotShare"})}),(0,t.jsx)(e.td,{children:"Percentage allocated to jackpot"}),(0,t.jsx)(e.td,{children:"6900 (69.0%)"}),(0,t.jsx)(e.td,{children:"0-10000 (0-100%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"liquidityShare"})}),(0,t.jsx)(e.td,{children:"Percentage allocated to liquidity"}),(0,t.jsx)(e.td,{children:"1000 (10.0%)"}),(0,t.jsx)(e.td,{children:"0-10000 (0-100%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"marketingShare"})}),(0,t.jsx)(e.td,{children:"Percentage allocated to marketing"}),(0,t.jsx)(e.td,{children:"500 (5.0%)"}),(0,t.jsx)(e.td,{children:"0-10000 (0-100%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"developmentShare"})}),(0,t.jsx)(e.td,{children:"Percentage allocated to development"}),(0,t.jsx)(e.td,{children:"500 (5.0%)"}),(0,t.jsx)(e.td,{children:"0-10000 (0-100%)"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"stakingShare"})}),(0,t.jsx)(e.td,{children:"Percentage allocated to staking rewards"}),(0,t.jsx)(e.td,{children:"1100 (11.0%)"}),(0,t.jsx)(e.td,{children:"0-10000 (0-100%)"})]})]})]}),"\n",(0,t.jsx)(e.h2,{id:"jackpot-configuration",children:"Jackpot Configuration"}),"\n",(0,t.jsx)(e.p,{children:"The jackpot system can be configured with these parameters:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'// scripts/configJackpot.js\nasync function main() {\n  // Jackpot system parameters\n  const jackpotParams = {\n    minJackpotSize: ethers.utils.parseEther("10000"), // Minimum size to trigger\n    maxWinners: 10, // Maximum number of winners per distribution\n    baseEntryProbability: 100, // Base probability for jackpot entry\n    entryMultiplierFactor: 150, // Multiplier for additional entries\n    cooldownPeriod: 86400 // 24 hours cooldown between jackpots\n  };\n  \n  // Configure jackpot contracts\n  // ...implementation...\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"cross-chain-configuration",children:"Cross-Chain Configuration"}),"\n",(0,t.jsx)(e.p,{children:"To configure cross-chain functionality:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'// scripts/configCrossChain.js\nasync function main() {\n  // Cross-chain parameters\n  const crossChainParams = {\n    supportedChains: [\n      {\n        chainId: 1, // Ethereum\n        endpoint: "0xLZEndpointOnEthereum",\n        fee: ethers.utils.parseEther("0.001")\n      },\n      {\n        chainId: 56, // BSC\n        endpoint: "0xLZEndpointOnBSC",\n        fee: ethers.utils.parseEther("0.0005")\n      },\n      {\n        chainId: 42161, // Arbitrum\n        endpoint: "0xLZEndpointOnArbitrum",\n        fee: ethers.utils.parseEther("0.0002")\n      }\n    ],\n    gaslimit: 200000,\n    messageVersion: 1\n  };\n  \n  // Configure cross-chain functionality\n  // ...implementation...\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"randomness-configuration",children:"Randomness Configuration"}),"\n",(0,t.jsx)(e.p,{children:"Configure randomness sources for the jackpot trigger:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'// scripts/configRandomness.js\nasync function main() {\n  // Randomness configuration\n  const randomnessParams = {\n    chainlink: {\n      coordinator: "0xChainlinkVRFCoordinator",\n      keyhash: "0xKeyhashForChainlinkVRF",\n      fee: ethers.utils.parseEther("0.0001"),\n      confirmations: 3\n    },\n    drand: {\n      endpoint: "https://api.drand.sh",\n      chainHash: "0xDrandChainHash",\n      publicKey: "0xDrandPublicKey"\n    },\n    arbitrumVRF: {\n      coordinator: "0xArbitrumVRFCoordinator",\n      confirmations: 1\n    }\n  };\n  \n  // Configure randomness contracts\n  // ...implementation...\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"gas-optimization",children:"Gas Optimization"}),"\n",(0,t.jsx)(e.p,{children:"Configure gas optimization parameters:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'// Gas optimization settings\nconst gasSettings = {\n  eip1559Mode: true, // Use EIP-1559 transactions\n  maxFeePerGas: ethers.utils.parseUnits("50", "gwei"),\n  maxPriorityFeePerGas: ethers.utils.parseUnits("1.5", "gwei")\n};\n'})}),"\n",(0,t.jsx)(e.h2,{id:"multi-chain-deployment",children:"Multi-Chain Deployment"}),"\n",(0,t.jsx)(e.p,{children:"For deploying across multiple chains:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Deploy to Ethereum\nnpx hardhat run scripts/deploy.js --network ethereum\n\n# Deploy to Arbitrum\nnpx hardhat run scripts/deploy.js --network arbitrum\n\n# Deploy to BSC\nnpx hardhat run scripts/deploy.js --network bsc\n\n# Configure cross-chain connections\nnpx hardhat run scripts/setPeers.js --network ethereum\nnpx hardhat run scripts/setPeers.js --network arbitrum\nnpx hardhat run scripts/setPeers.js --network bsc\n"})}),"\n",(0,t.jsx)(e.h2,{id:"contract-verification",children:"Contract Verification"}),"\n",(0,t.jsx)(e.p,{children:"Verify deployed contracts on block explorers:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Verify on Etherscan\nnpx hardhat verify --network ethereum DEPLOYED_CONTRACT_ADDRESS CONSTRUCTOR_ARG1 CONSTRUCTOR_ARG2\n\n# Verify on Arbiscan\nnpx hardhat verify --network arbitrum DEPLOYED_CONTRACT_ADDRESS CONSTRUCTOR_ARG1 CONSTRUCTOR_ARG2\n\n# Verify on BSCScan\nnpx hardhat verify --network bsc DEPLOYED_CONTRACT_ADDRESS CONSTRUCTOR_ARG1 CONSTRUCTOR_ARG2\n"})}),"\n",(0,t.jsx)(e.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,t.jsx)(e.p,{children:"For advanced deployment scenarios, create a configuration file:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'// config/deployment.config.js\nmodule.exports = {\n  mainnet: {\n    // Mainnet configuration\n    token: {\n      name: "OmniDragon",\n      symbol: "OMNI",\n      initialSupply: "1000000000000000000000000000"\n    },\n    fees: {\n      buy: 1000,\n      sell: 1000,\n      transfer: 200\n    },\n    // Other mainnet-specific settings\n  },\n  testnet: {\n    // Testnet configuration\n    token: {\n      name: "OmniDragon Test",\n      symbol: "OMNIT",\n      initialSupply: "100000000000000000000000000"\n    },\n    fees: {\n      buy: 500,\n      sell: 500,\n      transfer: 100\n    }\n    // Other testnet-specific settings\n  }\n};\n'})}),"\n",(0,t.jsx)(e.p,{children:"And use it in deployment scripts:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:'const config = require("../config/deployment.config");\n\nasync function main() {\n  // Get environment-specific config\n  const network = hre.network.name;\n  const envConfig = network.includes("mainnet") ? config.mainnet : config.testnet;\n  \n  // Use configuration\n  // ...implementation...\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function a(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);