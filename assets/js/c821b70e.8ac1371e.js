"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[7693],{5537:(e,n,t)=>{t.d(n,{A:()=>T});var a=t(6540),i=t(4164),r=t(5627),s=t(6347),o=t(372),c=t(604),l=t(1861),u=t(8749);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a})))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h({value:e,tabValues:n}){return n.some((n=>n.value===e))}function p({queryString:e=!1,groupId:n}){const t=(0,s.W6)(),i=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=m(e),[s,c]=(0,a.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[l,d]=p({queryString:t,groupId:i}),[f,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,i]=(0,u.Dv)(n);return[t,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:i}),b=(()=>{const e=l??f;return h({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{b&&c(b)}),[b]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),g(e)}),[d,g,r]),tabValues:r}}var g=t(9136);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function x({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),l=e=>{const n=e.currentTarget,i=o.indexOf(n),r=s[i].value;r!==t&&(c(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:a})=>(0,v.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:l,...a,className:(0,i.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function k(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function T(e){const n=(0,g.A)();return(0,v.jsx)(k,{...e,children:d(e.children)},String(n))}},8043:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"contracts/math/date-time-lib","title":"DragonDateTimeLib","description":"Advanced date and time manipulation library for blockchain applications","source":"@site/docs/contracts/math/date-time-lib.md","sourceDirName":"contracts/math","slug":"/contracts/math/date-time-lib","permalink":"/contracts/math/date-time-lib","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/contracts/math/date-time-lib.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"DragonDateTimeLib","description":"Advanced date and time manipulation library for blockchain applications"},"sidebar":"contracts","previous":{"title":"ve69LPMath","permalink":"/contracts/math/ve69lp-math"},"next":{"title":"DragonAdaptiveFeeManager","permalink":"/contracts/math/adaptive-fee"}}');var i=t(4848),r=t(8453);t(5537),t(9329);const s={sidebar_position:4,title:"DragonDateTimeLib",description:"Advanced date and time manipulation library for blockchain applications"},o="DragonDateTimeLib",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Scheduling Jackpot Events",id:"scheduling-jackpot-events",level:3},{value:"Token Lock Duration",id:"token-lock-duration",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Gas Optimization",id:"gas-optimization",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"dragondatetimelib",children:"DragonDateTimeLib"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Advanced date and time manipulation library for blockchain applications"})}),"\n",(0,i.jsxs)("div",{className:"contract-badges",children:[(0,i.jsx)("span",{className:"contract-badge utility",children:"Utility Library"}),(0,i.jsx)("span",{className:"contract-badge time",children:"Time Management"}),(0,i.jsx)("span",{className:"contract-badge optimized",children:"Gas Optimized"})]}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"DragonDateTimeLib"})," provides sophisticated date and time functionality for blockchain applications, enabling time-based features like scheduled events, duration calculations, and cross-chain time synchronization."]}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart TB\n    subgraph "Core Functionality"\n        TimestampConversion["Timestamp to DateTime"]\n        DurationCalculation["Duration Calculations"]\n        TimeScheduling["Scheduling Functions"]\n    end\n    \n    subgraph "Protocol Applications"\n        JackpotScheduling["Jackpot Scheduling"]\n        GovernanceVoting["Governance Voting Periods"]\n        TokenLocking["Token Lock Periods"]\n        MarketAnalysis["Market Data Analysis"]\n    end\n    \n    TimestampConversion --\x3e JackpotScheduling\n    TimestampConversion --\x3e GovernanceVoting\n    DurationCalculation --\x3e TokenLocking\n    DurationCalculation --\x3e GovernanceVoting\n    TimeScheduling --\x3e JackpotScheduling\n    TimeScheduling --\x3e MarketAnalysis\n    \n    classDef highlight fill:#4a80d1,stroke:#333,stroke-width:2px,color:white;\n    class TimestampConversion,DurationCalculation highlight'}),"\n",(0,i.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,i.jsx)(n.p,{children:"This library contains essential time and date manipulation functions for blockchain applications."}),"\n",(0,i.jsx)("div",{className:"function-signature",children:(0,i.jsx)(n.p,{children:"function timestampToDateTime(uint256 timestamp) internal pure returns (DateTime memory dt)"})}),"\n",(0,i.jsx)(n.p,{children:"Converts a Unix timestamp into a structured DateTime object with year, month, day, hour, minute, and second components."}),"\n",(0,i.jsx)("div",{className:"function-signature",children:(0,i.jsx)(n.p,{children:"function isLeapYear(uint256 year) internal pure returns (bool)"})}),"\n",(0,i.jsx)(n.p,{children:"Determines if a given year is a leap year according to the Gregorian calendar rules."}),"\n",(0,i.jsx)("div",{className:"function-signature",children:(0,i.jsx)(n.p,{children:"function getDaysInMonth(uint256 year, uint256 month) internal pure returns (uint256)"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the number of days in a specified month, accounting for leap years when necessary."}),"\n",(0,i.jsx)("div",{className:"function-signature",children:(0,i.jsx)(n.p,{children:"function addSeconds(uint256 timestamp, uint256 _seconds) internal pure returns (uint256)"})}),"\n",(0,i.jsx)(n.p,{children:"Adds a specified number of seconds to a timestamp and returns the resulting timestamp."}),"\n",(0,i.jsx)("div",{className:"function-signature",children:(0,i.jsx)(n.p,{children:"function addDays(uint256 timestamp, uint256 _days) internal pure returns (uint256)"})}),"\n",(0,i.jsx)(n.p,{children:"Adds a specified number of days to a timestamp and returns the resulting timestamp."}),"\n",(0,i.jsx)("div",{className:"function-signature",children:(0,i.jsx)(n.p,{children:"function diffSeconds(uint256 fromTimestamp, uint256 toTimestamp) internal pure returns (uint256)"})}),"\n",(0,i.jsx)(n.p,{children:"Calculates the difference in seconds between two timestamps."}),"\n",(0,i.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,i.jsx)(n.h3,{id:"scheduling-jackpot-events",children:"Scheduling Jackpot Events"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'// Import the library\nimport "../math/DragonDateTimeLib.sol";\n\ncontract JackpotScheduler {\n    using DragonDateTimeLib for uint256;\n    \n    uint256 public nextJackpotTimestamp;\n    \n    // Schedule the next jackpot event\n    function scheduleNextJackpot() external {\n        // Schedule for next Friday at 8:00 PM UTC\n        DragonDateTimeLib.DateTime memory now = block.timestamp.timestampToDateTime();\n        \n        // Calculate days to next Friday (Friday = 5)\n        uint256 daysToFriday = (5 + 7 - now.dayOfWeek) % 7;\n        if (daysToFriday == 0 && (now.hour >= 20 || (now.hour == 20 && now.minute > 0))) {\n            daysToFriday = 7; // If it\'s already past 8 PM on Friday, schedule for next Friday\n        }\n        \n        // Set target hour, minute, second\n        uint256 targetTimestamp = block.timestamp.addDays(daysToFriday);\n        DragonDateTimeLib.DateTime memory target = targetTimestamp.timestampToDateTime();\n        \n        // Adjust to 8:00 PM\n        int256 hourAdjustment = 20 - int256(target.hour);\n        targetTimestamp = targetTimestamp + uint256(hourAdjustment) * 3600;\n        \n        // Set minute and second to 0\n        targetTimestamp = targetTimestamp - (target.minute * 60) - target.second;\n        \n        nextJackpotTimestamp = targetTimestamp;\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"token-lock-duration",children:"Token Lock Duration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'// Import the library\nimport "../math/DragonDateTimeLib.sol";\n\ncontract TokenLocker {\n    using DragonDateTimeLib for uint256;\n    \n    struct Lock {\n        address user;\n        uint256 amount;\n        uint256 unlockTime;\n    }\n    \n    mapping(address => Lock) public locks;\n    \n    // Lock tokens for a specific duration\n    function lockTokens(uint256 amount, uint256 durationDays) external {\n        require(amount > 0, "Amount must be greater than 0");\n        require(durationDays > 0, "Duration must be greater than 0");\n        \n        // Calculate unlock timestamp\n        uint256 unlockTime = block.timestamp.addDays(durationDays);\n        \n        // Create lock\n        locks[msg.sender] = Lock({\n            user: msg.sender,\n            amount: amount,\n            unlockTime: unlockTime\n        });\n        \n        // Transfer tokens from user to contract\n        // ...\n    }\n    \n    // Check remaining lock time\n    function getRemainingLockTime(address user) external view returns (uint256 days_, uint256 hours_, uint256 minutes_) {\n        Lock memory lock = locks[user];\n        if (lock.unlockTime <= block.timestamp) {\n            return (0, 0, 0);\n        }\n        \n        uint256 remainingSeconds = lock.unlockTime.diffSeconds(block.timestamp);\n        days_ = remainingSeconds / 86400;\n        hours_ = (remainingSeconds % 86400) / 3600;\n        minutes_ = (remainingSeconds % 3600) / 60;\n        \n        return (days_, hours_, minutes_);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)("div",{className:"security-consideration",children:[(0,i.jsx)("h4",{children:"Security Considerations"}),(0,i.jsx)("p",{children:"When using date and time functions in smart contracts, consider these security best practices:"}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Timestamp Manipulation"}),": Be aware that block timestamps can be slightly manipulated by miners (within a few seconds)"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Time Zones"}),": Always use UTC for consistency; avoid local time zones"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Leap Seconds"}),": The library doesn't account for leap seconds, which are rare but could affect high-precision timing"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Year 2038 Problem"}),": For very long-term contracts, be aware of the Year 2038 problem with 32-bit timestamps"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("strong",{children:"Cross-Chain Time Synchronization"}),": Different blockchains may have slightly different timestamps"]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"gas-optimization",children:"Gas Optimization"}),"\n",(0,i.jsxs)("div",{className:"gas-optimization",children:[(0,i.jsx)("h4",{children:"Gas Optimization Notes"}),(0,i.jsx)("p",{children:"The library implements several gas optimizations:"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Precalculated constants for common time values (seconds per day, hour, etc.)"}),(0,i.jsx)("li",{children:"Efficient leap year calculation algorithm"}),(0,i.jsx)("li",{children:"Minimized storage operations for date/time calculations"}),(0,i.jsx)("li",{children:"Optimized date arithmetic for common operations"}),(0,i.jsx)("li",{children:"Memory-efficient DateTime struct design"})]})]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(6540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var a=t(4164);const i={tabItem:"tabItem_Ymn6"};var r=t(4848);function s({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,t),hidden:n,children:e})}}}]);