"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[7699],{8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},9230:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"concepts/architecture","title":"Architecture","description":"The Sonic Red Dragon ecosystem is built on a modular, extensible architecture designed for cross-chain compatibility, security, and scalability.","source":"@site/docs/concepts/architecture.md","sourceDirName":"concepts","slug":"/concepts/architecture","permalink":"/concepts/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/concepts/architecture.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"concepts","previous":{"title":"Overview","permalink":"/concepts/overview"},"next":{"title":"Tokenomics","permalink":"/concepts/tokenomics"}}');var i=r(4848),s=r(8453);const o={sidebar_position:2},a="Architecture",c={},l=[{value:"System Overview",id:"system-overview",level:2},{value:"Core Components",id:"core-components",level:2},{value:"OmniDragon Token",id:"omnidragon-token",level:3},{value:"Cross-Chain Infrastructure",id:"cross-chain-infrastructure",level:3},{value:"Governance System",id:"governance-system",level:3},{value:"Jackpot System",id:"jackpot-system",level:3},{value:"Technical Relationships",id:"technical-relationships",level:2},{value:"Multi-Chain Deployment",id:"multi-chain-deployment",level:2},{value:"Security Model",id:"security-model",level:2},{value:"Fee Flow",id:"fee-flow",level:2},{value:"Integration Points",id:"integration-points",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"architecture",children:"Architecture"})}),"\n",(0,i.jsx)(n.p,{children:"The Sonic Red Dragon ecosystem is built on a modular, extensible architecture designed for cross-chain compatibility, security, and scalability."}),"\n",(0,i.jsx)(n.h2,{id:"system-overview",children:"System Overview"}),"\n",(0,i.jsx)(n.p,{children:"At a high level, the Sonic Red Dragon architecture consists of several interconnected components:"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart TD\n    Token["OmniDragon Token"] --\x3e LZ["LayerZero V2"]\n    Token --\x3e Governance["ve69LP Governance"]\n    Token --\x3e JackpotSystem["Jackpot System"]\n    \n    subgraph "Cross-Chain Infrastructure"\n        LZ\n        MessageLib["Message Library"]\n        DVN["Data Verification Network"]\n        Executor["Executor"]\n    end\n    \n    subgraph "Governance System"\n        Governance\n        Treasury["Treasury"]\n        VotingPower["Voting Power"]\n        Rewards["Rewards Distribution"]\n    end\n    \n    subgraph "Jackpot Infrastructure"\n        JackpotSystem\n        JackpotVault["Jackpot Vault"]\n        SwapTrigger["Swap Trigger Oracle"]\n        Distributor["Jackpot Distributor"]\n    end\n    \n    LZ --\x3e MessageLib\n    LZ --\x3e DVN\n    LZ --\x3e Executor\n    \n    Governance --\x3e Treasury\n    Governance --\x3e VotingPower\n    Governance --\x3e Rewards\n    \n    JackpotSystem --\x3e JackpotVault\n    JackpotSystem --\x3e SwapTrigger\n    JackpotSystem --\x3e Distributor\n    \n    classDef highlight fill:#4a80d1,stroke:#333,stroke-width:2px,color:white;\n    class Token,LZ,Governance,JackpotSystem highlight\n\n    style Core fill:#ebf5ff,stroke:#3c71c3,stroke-width:2px,color:#333\n    style Users fill:#fff8e1,stroke:#ffc107,stroke-width:2px,color:#333\n    style Governance fill:#e0f7fa,stroke:#00acc1,stroke-width:2px,color:#333'}),"\n",(0,i.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,i.jsx)(n.h3,{id:"omnidragon-token",children:"OmniDragon Token"}),"\n",(0,i.jsx)(n.p,{children:"The OmniDragon token serves as the foundation of the ecosystem. It implements:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"ERC-20 standard functionality"}),"\n",(0,i.jsx)(n.li,{children:"Cross-chain compatibility via LayerZero V2"}),"\n",(0,i.jsx)(n.li,{children:"Fee collection and distribution"}),"\n",(0,i.jsx)(n.li,{children:"Jackpot entry triggering for buy transactions"}),"\n",(0,i.jsx)(n.li,{children:"Governance integration"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cross-chain-infrastructure",children:"Cross-Chain Infrastructure"}),"\n",(0,i.jsx)(n.p,{children:"The cross-chain functionality is powered by LayerZero V2:"}),"\n",(0,i.jsx)(n.mermaid,{value:'sequenceDiagram\n    participant UserA as "User (Chain A)"\n    participant TokenA as "DRAGON (Chain A)"\n    participant LZA as "LayerZero Endpoint (Chain A)"\n    participant Relayer as "LayerZero Relayer"\n    participant DVN as "Data Verification Network"\n    participant LZB as "LayerZero Endpoint (Chain B)"\n    participant TokenB as "DRAGON (Chain B)"\n    participant UserB as "User (Chain B)"\n    \n    UserA->>TokenA: sendTokensToChain(ChainB, recipient, amount)\n    TokenA->>TokenA: Burn tokens\n    TokenA->>LZA: Send cross-chain message\n    LZA->>Relayer: Relay message\n    LZA->>DVN: Request data verification\n    DVN--\x3e>LZB: Verify message data\n    Relayer--\x3e>LZB: Deliver message\n    LZB->>TokenB: Receive verified message\n    TokenB->>TokenB: Mint tokens\n    TokenB->>UserB: Token received'}),"\n",(0,i.jsx)(n.h3,{id:"governance-system",children:"Governance System"}),"\n",(0,i.jsx)(n.p,{children:"The governance system is based on the ve69LP (vote-escrowed) model:"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart TD\n    LP["LP Tokens"] --\x3e|"Lock"| ve69LP["ve69LP Tokens"]\n    ve69LP --\x3e|"Grant"| Voting["Voting Power"]\n    ve69LP --\x3e|"Receive"| FeeRewards["Fee Rewards"]\n    ve69LP --\x3e|"Boost"| StakingRewards["Staking Rewards"]\n    \n    Voting --\x3e|"Vote on"| Proposals["Governance Proposals"]\n    Proposals --\x3e|"Execute"| Treasury["Treasury Actions"]\n    Proposals --\x3e|"Control"| Parameters["Protocol Parameters"]\n    \n    classDef highlight fill:#4a80d1,stroke:#333,stroke-width:2px,color:white;\n    class ve69LP highlight'}),"\n",(0,i.jsx)(n.h3,{id:"jackpot-system",children:"Jackpot System"}),"\n",(0,i.jsx)(n.p,{children:"The jackpot system provides on-chain lottery functionality:"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart TD\n    Buy["Token Purchase"] --\x3e|"Detected by"| OmniDragon["OmniDragon Token"]\n    OmniDragon --\x3e|"Collect Fees"| FeeProcessor["Fee Processor"]\n    FeeProcessor --\x3e|"6.9% to Jackpot"| JackpotVault["Jackpot Vault"]\n    OmniDragon --\x3e|"Trigger"| SwapOracle["Swap Trigger Oracle"]\n    SwapOracle --\x3e|"Calculate Probability"| Entry["Lottery Entry"]\n    Entry --\x3e|"If Winning Entry"| Distributor["Jackpot Distributor"]\n    JackpotVault --\x3e|"Provide Funds"| Distributor\n    Distributor --\x3e|"Send Reward"| Winner["Winner"]\n    \n    classDef highlight fill:#4a80d1,stroke:#333,stroke-width:2px,color:white;\n    class SwapOracle,JackpotVault,Distributor highlight'}),"\n",(0,i.jsx)(n.h2,{id:"technical-relationships",children:"Technical Relationships"}),"\n",(0,i.jsx)(n.p,{children:"The relationship between the contracts can be visualized as follows:"}),"\n",(0,i.jsx)(n.mermaid,{value:"classDiagram\n    class OmniDragon {\n        +address swapTrigger\n        +address jackpotVault\n        +address ve69LP\n        +transfer()\n        +_tryProcessLotteryEntry()\n        +processPartnerJackpotEntry()\n        +swapTokensForWrappedNative()\n        +_distributeFees()\n        +sendTokensToChain()\n    }\n    \n    class OmniDragonSwapTriggerOracle {\n        +address omniDragon\n        +address jackpotDistributor\n        +onSwap()\n        +calculateWinProbability()\n        +getAggregatedPrice()\n    }\n    \n    class DragonJackpotVault {\n        +address omniDragon\n        +address distributor\n        +uint256 availableJackpotAmount\n        +addToJackpot()\n        +distributeJackpot()\n        +getAvailableJackpot()\n    }\n    \n    class DragonJackpotDistributor {\n        +address jackpotVault\n        +triggerJackpot()\n        +distributeJackpot()\n    }\n    \n    class ve69LP {\n        +createLock()\n        +increaseLockAmount()\n        +extendLockTime()\n        +withdraw()\n        +getVotingPower()\n    }\n    \n    OmniDragon --\x3e OmniDragonSwapTriggerOracle : triggers\n    OmniDragon --\x3e DragonJackpotVault : sends fees\n    OmniDragon --\x3e ve69LP : sends fees\n    OmniDragonSwapTriggerOracle --\x3e DragonJackpotDistributor : notifies\n    DragonJackpotDistributor --\x3e DragonJackpotVault : requests funds"}),"\n",(0,i.jsx)(n.h2,{id:"multi-chain-deployment",children:"Multi-Chain Deployment"}),"\n",(0,i.jsx)(n.p,{children:"The Sonic Red Dragon ecosystem is deployed on multiple blockchains with identical functionality on each chain:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Chain"}),(0,i.jsx)(n.th,{children:"Layer Type"}),(0,i.jsx)(n.th,{children:"Chain ID"}),(0,i.jsx)(n.th,{children:"LZ Chain ID"}),(0,i.jsx)(n.th,{children:"Primary Use Cases"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Ethereum"}),(0,i.jsx)(n.td,{children:"L1"}),(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"101"}),(0,i.jsx)(n.td,{children:"Governance, Security, Prime Liquidity"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Sonic"}),(0,i.jsx)(n.td,{children:"L1"}),(0,i.jsx)(n.td,{children:"146"}),(0,i.jsx)(n.td,{children:"332"}),(0,i.jsx)(n.td,{children:"High Throughput, Lower Fees"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Arbitrum"}),(0,i.jsx)(n.td,{children:"L2"}),(0,i.jsx)(n.td,{children:"42161"}),(0,i.jsx)(n.td,{children:"110"}),(0,i.jsx)(n.td,{children:"Scaling, Lower Fees"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Avalanche"}),(0,i.jsx)(n.td,{children:"L1"}),(0,i.jsx)(n.td,{children:"43114"}),(0,i.jsx)(n.td,{children:"106"}),(0,i.jsx)(n.td,{children:"Fast Finality, EVM Compatible"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Base"}),(0,i.jsx)(n.td,{children:"L2"}),(0,i.jsx)(n.td,{children:"8453"}),(0,i.jsx)(n.td,{children:"184"}),(0,i.jsx)(n.td,{children:"Scaling, Lower Fees"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"security-model",children:"Security Model"}),"\n",(0,i.jsx)(n.p,{children:"The security architecture is built on several principles:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-Layered Access Controls"}),": Role-based permissions with strict validation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Economic Security"}),": Fee mechanism and incentive alignment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Oracle Diversity"}),": Multiple price feeds for reliable market data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Governance Time-Locks"}),": Delay periods for critical changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"External Verification"}),": LayerZero DVN provides additional security layer"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"fee-flow",children:"Fee Flow"}),"\n",(0,i.jsx)(n.p,{children:"The token implements a fee model that distributes transaction fees as follows:"}),"\n",(0,i.jsx)(n.mermaid,{value:'pie title Fee Distribution\n    "Jackpot (6.9%)" : 6.9\n    "Governance (2.41%)" : 2.41\n    "Burn (0.69%)" : 0.69'}),"\n",(0,i.jsx)(n.h2,{id:"integration-points",children:"Integration Points"}),"\n",(0,i.jsx)(n.p,{children:"The system exposes several integration points for partners and extensions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partner Jackpot Program"}),": Special jackpot entries for integrated pools"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-Chain Messaging"}),": LayerZero integration for cross-chain communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Governance Hooks"}),": Extensible governance for protocol evolution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Oracle Aggregation"}),": Multiple price feed sources for reliability"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);