"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[7327],{4544:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"guides/quickstart","title":"Quick Start Guide","description":"This guide will help you get started with the Sonic Red Dragon protocol for developers, integrators, and users.","source":"@site/docs/guides/quickstart.md","sourceDirName":"guides","slug":"/guides/quickstart","permalink":"/guides/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/guides/quickstart.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Quick Start Guide"},"sidebar":"guides","next":{"title":"Installation Guide","permalink":"/guides/installation"}}');var t=r(4848),s=r(8453);const o={sidebar_position:1,title:"Quick Start Guide"},a="Quick Start Guide",c={},l=[{value:"For Users",id:"for-users",level:2},{value:"Acquiring Dragon Tokens",id:"acquiring-dragon-tokens",level:3},{value:"Participating in Jackpots",id:"participating-in-jackpots",level:3},{value:"Cross-Chain Transfers",id:"cross-chain-transfers",level:3},{value:"For Developers",id:"for-developers",level:2},{value:"Environment Setup",id:"environment-setup",level:3},{value:"Local Development",id:"local-development",level:3},{value:"Key Contracts",id:"key-contracts",level:3},{value:"Example Integration",id:"example-integration",level:3},{value:"For Node Operators",id:"for-node-operators",level:2},{value:"Running a Node",id:"running-a-node",level:3},{value:"SDK Integration",id:"sdk-integration",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"Community Resources",id:"community-resources",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"quick-start-guide",children:"Quick Start Guide"})}),"\n",(0,t.jsx)(e.p,{children:"This guide will help you get started with the Sonic Red Dragon protocol for developers, integrators, and users."}),"\n",(0,t.jsx)(e.h2,{id:"for-users",children:"For Users"}),"\n",(0,t.jsx)(e.h3,{id:"acquiring-dragon-tokens",children:"Acquiring Dragon Tokens"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Connect Wallet"}),": Visit ",(0,t.jsx)(e.a,{href:"https://app.sonicreddragon.io",children:"app.sonicreddragon.io"})," and connect your Web3 wallet"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Select Network"}),": Choose your preferred network (Ethereum, Arbitrum, BSC, etc.)"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Swap Tokens"}),": Use the swap interface to exchange your assets for Dragon tokens"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Confirm Transaction"}),": Approve the transaction in your wallet"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"participating-in-jackpots",children:"Participating in Jackpots"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Navigate to Jackpot"}),": Go to the Jackpot section in the OmniDragon app"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"View Current Jackpot"}),": Check the current jackpot amount and time until next draw"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Increase Chances"}),": Increase your jackpot chances by:","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Holding more tokens"}),"\n",(0,t.jsx)(e.li,{children:"Staking tokens in the protocol"}),"\n",(0,t.jsx)(e.li,{children:"Participating in promotions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"cross-chain-transfers",children:"Cross-Chain Transfers"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Go to Bridge"}),": Navigate to the Bridge section"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Select Chains"}),": Choose source and destination chains"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Enter Amount"}),": Specify the amount to transfer"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Confirm"}),": Approve the transaction in your wallet"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Wait for Confirmation"}),": The cross-chain transfer typically completes in 10-15 minutes"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"for-developers",children:"For Developers"}),"\n",(0,t.jsx)(e.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/wenakita/sonicreddragon.git\ncd sonicreddragon\n\n# Install dependencies\nnpm install\n\n# Set up environment\ncp .env.example .env\n# Edit .env with your configuration\n\n# Compile contracts\nnpx hardhat compile\n"})}),"\n",(0,t.jsx)(e.h3,{id:"local-development",children:"Local Development"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Start local blockchain\nnpx hardhat node\n\n# Deploy contracts to local network\nnpx hardhat run scripts/deploy.js --network localhost\n\n# Run tests\nnpx hardhat test\n"})}),"\n",(0,t.jsx)(e.h3,{id:"key-contracts",children:"Key Contracts"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-solidity",children:'// Import core contracts\nimport "@omnidragon/contracts/OmniDragon.sol";\nimport "@omnidragon/contracts/DragonJackpotVault.sol";\n'})}),"\n",(0,t.jsx)(e.h3,{id:"example-integration",children:"Example Integration"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport "@omnidragon/interfaces/IOmniDragon.sol";\n\ncontract OmniDragonIntegration {\n    IOmniDragon public omniDragon;\n    \n    constructor(address _omniDragonAddress) {\n        omniDragon = IOmniDragon(_omniDragonAddress);\n    }\n    \n    function getJackpotInfo() external view returns (uint256) {\n        return omniDragon.getCurrentJackpotAmount();\n    }\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"for-node-operators",children:"For Node Operators"}),"\n",(0,t.jsx)(e.h3,{id:"running-a-node",children:"Running a Node"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Hardware Requirements"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"4+ CPU cores"}),"\n",(0,t.jsx)(e.li,{children:"16GB+ RAM"}),"\n",(0,t.jsx)(e.li,{children:"500GB+ SSD storage"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Installation"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Install Docker\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\n\n# Pull and run OmniDragon node\ndocker pull omnidragon/node:latest\ndocker run -d --name omnidragon-node -p 8545:8545 -v /path/to/data:/data omnidragon/node:latest\n"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Configuration"}),":"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["Edit ",(0,t.jsx)(e.code,{children:"config.json"})," with your network parameters"]}),"\n",(0,t.jsx)(e.li,{children:"Set up secure RPC endpoints"}),"\n",(0,t.jsx)(e.li,{children:"Configure validator keys (if applicable)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"sdk-integration",children:"SDK Integration"}),"\n",(0,t.jsx)(e.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"// Install the SDK\n// npm install @omnidragon/sdk\n\n// Initialize in your application\nimport { OmniDragonSDK } from '@omnidragon/sdk';\n\nconst sdk = new OmniDragonSDK({\n  rpcUrl: 'https://arbitrum-mainnet.infura.io/v3/YOUR_API_KEY',\n  chainId: 42161 // Arbitrum\n});\n\n// Get token information\nconst tokenInfo = await sdk.getTokenInfo();\n\n// Check jackpot status\nconst jackpotInfo = await sdk.getJackpotInfo();\n"})}),"\n",(0,t.jsx)(e.h2,{id:"community-resources",children:"Community Resources"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Discord"}),": ",(0,t.jsx)(e.a,{href:"https://discord.gg/w75vaxDXuE",children:"discord.gg/w75vaxDXuE"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"GitHub"}),": ",(0,t.jsx)(e.a,{href:"https://github.com/wenakita/sonicreddragon",children:"github.com/wenakita/sonicreddragon"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Documentation"}),": ",(0,t.jsx)(e.a,{href:"https://docs.sonicreddragon.io",children:"docs.sonicreddragon.io"})]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Twitter"}),": ",(0,t.jsx)(e.a,{href:"https://twitter.com/sonicreddragon",children:"@sonicreddragon"})]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);