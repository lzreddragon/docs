"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[6119],{1672:(e,n,a)=>{a.d(n,{A:()=>d});var r=a(6540),i=a(1425),t=(a(9136),a(5363)),o=a(2087),s=a(4848);function d(e){return(0,s.jsx)(t.A,{fallback:(0,s.jsx)("div",{className:"mermaid-loading",children:"Loading diagram..."}),children:()=>(0,s.jsx)(c,{...e})})}function c({chart:e,title:n,caption:a,className:t,animated:d=!0,pulseSelector:c,animationOptions:l={}}){const m=(0,r.useRef)(null),[h,u]=(0,r.useState)(0),[g,p]=(0,r.useState)(null),[x,C]=(0,r.useState)(!1),f=e?.trim()||"";(0,r.useEffect)((()=>{if(m.current)if(p(null),C(!1),window.mermaid)try{const e="dark"===document.documentElement.dataset.theme;window.mermaid.initialize({theme:e?"dark":"default",themeVariables:{darkMode:e},securityLevel:"loose"});const n=setTimeout((()=>{try{window.mermaid.init(void 0,m.current.querySelectorAll(".mermaid:not(.processed)")),m.current.querySelectorAll(".mermaid").forEach((e=>{e.classList.add("processed")})),C(!0),d&&setTimeout((()=>{const e=m.current.querySelector(".docusaurus-mermaid-container");e&&(0,i._g)(e,{pulseSelector:c,...l})}),100)}catch(e){console.error("Failed to render mermaid diagram:",e),p(e.message),h<3&&u((e=>e+1))}}),50);return()=>clearTimeout(n)}catch(e){console.error("Failed to initialize mermaid:",e),p(e.message)}else p("Mermaid library not available")}),[e,h,d,c]);const v=[o.A.enhancedMermaidContainer||"",t||"",x&&o.A.rendered||""].filter(Boolean).join(" ");return(0,s.jsxs)("div",{ref:m,className:v,children:[n&&(0,s.jsx)("h3",{className:o.A.mermaidTitle||"",children:n}),(0,s.jsx)("div",{className:"docusaurus-mermaid-container",children:g?(0,s.jsxs)("div",{className:o.A.mermaidError,children:[(0,s.jsx)("p",{children:"Error rendering diagram."}),(0,s.jsxs)("details",{children:[(0,s.jsx)("summary",{children:"View error details"}),(0,s.jsx)("pre",{children:g})]})]}):(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("pre",{className:"mermaid",children:f}),!x&&(0,s.jsx)("div",{className:o.A.mermaidLoading||"",children:(0,s.jsxs)("div",{className:o.A.loadingIndicator||"",children:[(0,s.jsx)("span",{}),(0,s.jsx)("span",{}),(0,s.jsx)("span",{})]})})]})}),a&&(0,s.jsx)("p",{className:o.A.mermaidCaption||"",children:a})]})}},2087:(e,n,a)=>{a.d(n,{A:()=>r});const r={animationContainer:"animationContainer_qFbi",animationTitle:"animationTitle_Aunz",animationDescription:"animationDescription_Ov4W",animationError:"animationError_yvkm",votingPowerContainer:"votingPowerContainer_rVam",timelineLabels:"timelineLabels_ymyL",votingPowerTrack:"votingPowerTrack_ioTj","voting-power-bar":"voting-power-bar_YdRF",partnerBoostContainer:"partnerBoostContainer_Nbx6",partner:"partner_oQK4",partnerName:"partnerName_jHI0",boostTrack:"boostTrack_sueO","boost-fill":"boost-fill_csU7",percentage:"percentage_BL8G",totalAllocation:"totalAllocation_q9KR",totalLabel:"totalLabel_p4kt",totalBar:"totalBar_mqeA",pulse:"pulse_iDMA",calculationContainer:"calculationContainer_ZWH2",inputSide:"inputSide_qcOC",resultSide:"resultSide_AwPG",arrowRight:"arrowRight_wgI2",processingText:"processingText_xIPk","input-cube":"input-cube_V7bs","result-cube":"result-cube_ls1g","input-value":"input-value_hal2","result-value":"result-value_TNvy",crossChainContainer:"crossChainContainer_uGQt",chainBox:"chainBox_JwIk",chainLabel:"chainLabel_WrpK",nodeBox:"nodeBox_voFk",nodeLabel:"nodeLabel_yKzM",arrowSvg:"arrowSvg_BK05",mermaidContainer:"mermaidContainer_KO9S",mermaidTitle:"mermaidTitle_u_uO",mermaidCaption:"mermaidCaption_wbnp",feeSystemContainer:"feeSystemContainer__h_q",tokenSwapNode:"tokenSwapNode_lvrn",feePoolNode:"feePoolNode_iq4E",feeDistributionContainer:"feeDistributionContainer_Ql3t",feeDestinationsContainer:"feeDestinationsContainer_OiiH",feeDestinationNode:"feeDestinationNode_Q2q4","jackpot-node":"jackpot-node_U6t5","ve69lp-node":"ve69lp-node_mq1a","burn-node":"burn-node_Ktzb",percentTag:"percentTag_FQpB",mermaidError:"mermaidError_GTf9",mermaidLoading:"mermaidLoading_iCyq",animatedDiagramContainer:"animatedDiagramContainer__0gF",animatedContent:"animatedContent_QaIs",animatedNode:"animatedNode_MLYw",connectionSvg:"connectionSvg_kuFY",connectionLabel:"connectionLabel_BwvR",nodeContract:"nodeContract_mLML",nodeEvent:"nodeEvent_qLpj",nodeProcess:"nodeProcess_N9cH",nodeUser:"nodeUser_IMZv",flowChartContainer:"flowChartContainer_LoOU",flowChartStep:"flowChartStep_hHlJ",flowChartIcon:"flowChartIcon_d9lt",flowChartText:"flowChartText_Oh32",animationLoading:"animationLoading_vAVv",enhancedMermaidContainer:"enhancedMermaidContainer_IPf6",loadingIndicator:"loadingIndicator_dVEi",loadingPulse:"loadingPulse_FCIa",rendered:"rendered_Ku9G",fadeIn:"fadeIn_GJ3U",animatedCard:"animatedCard_m5VD",withHover:"withHover_QfE_",cardIcon:"cardIcon_BHXH",cardTitle:"cardTitle_Ppq0",cardContent:"cardContent_d8Ko","cardColor--primary":"cardColor--primary_gH3B","cardColor--success":"cardColor--success_DN36","cardColor--warning":"cardColor--warning_pEQU","cardColor--danger":"cardColor--danger_jZsL",standardMermaidContainer:"standardMermaidContainer_NOO0",mermaid:"mermaid_IJ4R",processed:"processed_VcJq",mermaidWrapper:"mermaidWrapper_XkJf",mermaidContent:"mermaidContent_UpoX"}},5363:(e,n,a)=>{a.d(n,{A:()=>t});a(6540);var r=a(9136),i=a(4848);function t({children:e,fallback:n}){return(0,r.A)()?(0,i.jsx)(i.Fragment,{children:e?.()}):n??null}},5520:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>f,contentTitle:()=>C,default:()=>j,frontMatter:()=>x,metadata:()=>r,toc:()=>v});const r=JSON.parse('{"id":"guide/elegant-diagrams","title":"Elegant Interactive Diagrams","description":"Learn how to create elegant, animated diagrams using Mermaid and Anime.js","source":"@site/docs/guide/elegant-diagrams.mdx","sourceDirName":"guide","slug":"/guide/elegant-diagrams","permalink":"/guide/elegant-diagrams","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/guide/elegant-diagrams.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Elegant Interactive Diagrams","description":"Learn how to create elegant, animated diagrams using Mermaid and Anime.js","sidebar_position":3}}');var i=a(4848),t=a(8453),o=a(1672),s=a(6540),d=a(2279),c=a(5363);const l="diagramContainer_e8yU",m="loadingContainer_VwsD",h="loadingIndicator_GZSx",u="errorContainer_dWin";d.A.initialize({startOnLoad:!0,theme:"neutral",securityLevel:"loose",fontFamily:"Inter, sans-serif",fontSize:14,flowchart:{htmlLabels:!0,curve:"basis",useMaxWidth:!1},sequence:{diagramMarginX:50,diagramMarginY:10,actorMargin:80,width:150,height:65,boxMargin:10,messageMargin:35,boxTextMargin:15,noteMargin:10},themeVariables:{primaryColor:"#4a80d1",primaryTextColor:"#ffffff",primaryBorderColor:"#4a80d1",lineColor:"#4a80d1",secondaryColor:"#6c8ebf",tertiaryColor:"#f5f7fa"}});const g=({chart:e,className:n})=>{const[a,r]=(0,s.useState)(""),[t,o]=(0,s.useState)(null),[c,g]=(0,s.useState)(!0);return(0,s.useEffect)((()=>{(async()=>{try{g(!0),o(null);const{svg:n}=await d.A.render("mermaid-svg-"+Math.random().toString(36).substr(2,9),e);r(n)}catch(n){console.error("Mermaid rendering error:",n),o(n)}finally{g(!1)}})()}),[e]),c?(0,i.jsx)("div",{className:m,children:(0,i.jsxs)("div",{className:h,children:[(0,i.jsx)("span",{}),(0,i.jsx)("span",{}),(0,i.jsx)("span",{})]})}):t?(0,i.jsxs)("div",{className:u,children:[(0,i.jsx)("h4",{children:"Failed to render diagram"}),(0,i.jsx)("p",{children:"There was an error rendering the Mermaid diagram:"}),(0,i.jsx)("pre",{children:t.message||"Unknown error"}),(0,i.jsxs)("details",{children:[(0,i.jsx)("summary",{children:"Diagram Source"}),(0,i.jsx)("pre",{children:e})]})]}):(0,i.jsx)("div",{className:`${l} ${n||""} standard-mermaid-container`,dangerouslySetInnerHTML:{__html:a}})},p=e=>(0,i.jsx)(c.A,{children:()=>(0,i.jsx)(g,{...e})}),x={title:"Elegant Interactive Diagrams",description:"Learn how to create elegant, animated diagrams using Mermaid and Anime.js",sidebar_position:3},C="Creating Elegant Interactive Diagrams",f={},v=[{value:"Basic Mermaid Diagram",id:"basic-mermaid-diagram",level:2},{value:"Enhanced Mermaid with Animations",id:"enhanced-mermaid-with-animations",level:2},{value:"Sequence Diagram",id:"sequence-diagram",level:2},{value:"Class Diagram",id:"class-diagram",level:2},{value:"State Diagram",id:"state-diagram",level:2},{value:"Entity Relationship Diagram",id:"entity-relationship-diagram",level:2},{value:"Gantt Chart",id:"gantt-chart",level:2},{value:"Using the EnhancedMermaid Component",id:"using-the-enhancedmermaid-component",level:2},{value:"Customizing Animations",id:"customizing-animations",level:2},{value:"Using the StandardMermaid Component",id:"using-the-standardmermaid-component",level:2}];function _(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"creating-elegant-interactive-diagrams",children:"Creating Elegant Interactive Diagrams"})}),"\n",(0,i.jsx)(n.p,{children:"This guide demonstrates how to create beautiful, animated diagrams in your documentation using Mermaid and Anime.js."}),"\n",(0,i.jsx)(n.h2,{id:"basic-mermaid-diagram",children:"Basic Mermaid Diagram"}),"\n",(0,i.jsx)(n.p,{children:"Let's start with a basic flowchart that automatically animates:"}),"\n",(0,i.jsx)(p,{chart:"\nflowchart LR\n  A[Start] --\x3e B{Is it working?}\n  B --\x3e|Yes| C[Great!]\n  B --\x3e|No| D[Debug]\n  D --\x3e B\n  C --\x3e E[Deploy]\n"}),"\n",(0,i.jsx)(n.h2,{id:"enhanced-mermaid-with-animations",children:"Enhanced Mermaid with Animations"}),"\n",(0,i.jsx)(n.p,{children:"The enhanced component provides more elegant styling and smoother animations:"}),"\n",(0,i.jsx)(o.A,{title:"OmniDragon Token Flow",caption:"Visualization of the token flow across chains",chart:"\nflowchart LR\n  subgraph Ethereum\n    TokenE[OmniDragon Token]\n    BridgeE[LayerZero Bridge]\n  end\n  \n  subgraph Arbitrum\n    TokenA[OmniDragon Token]\n    BridgeA[LayerZero Bridge]\n  end\n  \n  subgraph BSC\n    TokenB[OmniDragon Token]\n    BridgeB[LayerZero Bridge]\n  end\n  \n  TokenE <--\x3e|Transfer| BridgeE\n  TokenA <--\x3e|Transfer| BridgeA\n  TokenB <--\x3e|Transfer| BridgeB\n  \n  BridgeE <--\x3e|Message| BridgeA\n  BridgeE <--\x3e|Message| BridgeB\n  BridgeA <--\x3e|Message| BridgeB\n"}),"\n",(0,i.jsx)(n.h2,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,i.jsx)(n.p,{children:"Sequence diagrams also benefit from the elegant animations:"}),"\n",(0,i.jsx)(o.A,{title:"Cross-Chain Transfer Flow",chart:"\nsequenceDiagram\n  participant User\n  participant SourceChain\n  participant LayerZero\n  participant DestChain\n  \n  User->>SourceChain: Initiate Transfer\n  SourceChain->>SourceChain: Lock Tokens\n  SourceChain->>LayerZero: Send Message\n  LayerZero->>LayerZero: Verify Proof\n  LayerZero->>DestChain: Deliver Message\n  DestChain->>DestChain: Mint Tokens\n  DestChain->>User: Complete Transfer\n"}),"\n",(0,i.jsx)(n.h2,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,i.jsx)(n.p,{children:"Class diagrams help visualize smart contract relationships:"}),"\n",(0,i.jsx)(o.A,{title:"OmniDragon Contract Structure",chart:"\nclassDiagram\n  class OmniDragonToken {\n    +string name\n    +string symbol\n    +uint256 totalSupply\n    +mapping balances\n    +transfer(address, uint256)\n    +approve(address, uint256)\n    +transferFrom(address, address, uint256)\n  }\n  \n  class DragonOFT {\n    +bytes32 chainId\n    +send(uint16, bytes, uint256)\n    +receiveFrom(uint16, bytes, uint256)\n  }\n  \n  class LayerZeroEndpoint {\n    +send(uint16, bytes, bytes, address)\n    +receive(uint16, bytes, bytes)\n  }\n  \n  OmniDragonToken <|-- DragonOFT\n  DragonOFT --\x3e LayerZeroEndpoint\n"}),"\n",(0,i.jsx)(n.h2,{id:"state-diagram",children:"State Diagram"}),"\n",(0,i.jsx)(n.p,{children:"State diagrams show token status changes:"}),"\n",(0,i.jsx)(o.A,{title:"Token Lifecycle",chart:"\nstateDiagram-v2\n  [*] --\x3e Minted\n  Minted --\x3e Transferred: transfer()\n  Transferred --\x3e Burned: burn()\n  Burned --\x3e [*]\n  \n  Minted --\x3e Locked: bridge()\n  Locked --\x3e Minted: cancel()\n  \n  state CrossChain {\n      [*] --\x3e Requested\n      Requested --\x3e InTransit\n      InTransit --\x3e Completed\n      InTransit --\x3e Failed\n      Failed --\x3e Requested: retry()\n      Completed --\x3e [*]\n  }\n  \n  Locked --\x3e CrossChain: initiate()\n  CrossChain --\x3e Minted: rollback()\n"}),"\n",(0,i.jsx)(n.h2,{id:"entity-relationship-diagram",children:"Entity Relationship Diagram"}),"\n",(0,i.jsx)(n.p,{children:"ER diagrams help understand data relationships:"}),"\n",(0,i.jsx)(o.A,{title:"Token Data Model",chart:"\nerDiagram\n  TOKEN ||--o{ TRANSFER : records\n  TOKEN {\n      string name\n      string symbol\n      uint256 supply\n  }\n  TRANSFER {\n      address from\n      address to\n      uint256 amount\n      uint256 timestamp\n  }\n  TOKEN ||--o{ HOLDER : owns\n  HOLDER {\n      address wallet\n      uint256 balance\n      uint256 lastUpdate\n  }\n"}),"\n",(0,i.jsx)(n.h2,{id:"gantt-chart",children:"Gantt Chart"}),"\n",(0,i.jsx)(n.p,{children:"Gantt charts are useful for project timelines:"}),"\n",(0,i.jsx)(o.A,{title:"OmniDragon Development Roadmap",chart:"\ngantt\n  title OmniDragon Development Timeline\n  dateFormat  YYYY-MM-DD\n  \n  section Planning\n  Research           :done,    des1, 2023-01-01, 2023-01-15\n  Architecture       :done,    des2, 2023-01-16, 2023-01-31\n  \n  section Development\n  Smart Contracts    :done,    dev1, 2023-02-01, 2023-03-15\n  Frontend           :active,  dev2, 2023-02-15, 2023-04-30\n  Backend            :active,  dev3, 2023-02-15, 2023-04-15\n  \n  section Auditing\n  Internal Review    :crit,    rev1, 2023-04-01, 2023-04-15\n  External Audit     :crit,    rev2, 2023-04-16, 2023-05-15\n  \n  section Launch\n  Testnet            :         launch1, 2023-05-16, 2023-06-15\n  Mainnet            :         launch2, 2023-06-16, 2023-06-30\n"}),"\n",(0,i.jsx)(n.h2,{id:"using-the-enhancedmermaid-component",children:"Using the EnhancedMermaid Component"}),"\n",(0,i.jsx)(n.p,{children:"To use the enhanced component in your MDX files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import EnhancedMermaid from \'@site/src/components/EnhancedMermaid\';\n\n<EnhancedMermaid\n  title="My Diagram"\n  caption="Optional caption text"\n  chart={`\n    flowchart LR\n      A --\x3e B\n      B --\x3e C\n  `}\n/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"customizing-animations",children:"Customizing Animations"}),"\n",(0,i.jsx)(n.p,{children:"For custom animations, you can pass animation options:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<EnhancedMermaid\n  animated={true}\n  pulseSelector=".important-node"\n  animationOptions={{\n    delay: 1500,\n    duration: 1000\n  }}\n  chart={`...`}\n/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"using-the-standardmermaid-component",children:"Using the StandardMermaid Component"}),"\n",(0,i.jsx)(n.p,{children:"If you're having issues with the standard Mermaid code blocks (using triple backticks), you can use the StandardMermaid component as a reliable alternative:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import StandardMermaid from '@site/src/components/StandardMermaid';\n\n<StandardMermaid\n  chart={`\n    flowchart LR\n      A --\x3e B\n      B --\x3e C\n  `}\n/>\n"})}),"\n",(0,i.jsx)(n.p,{children:"With these components and techniques, you can create beautiful, interactive diagrams that enhance your documentation with elegant animations and visual appeal."})]})}function j(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(_,{...e})}):_(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var r=a(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);