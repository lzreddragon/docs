"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[1715],{826:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"concepts/fee-system","title":"Token Fee System","description":"Detailed explanation of OmniDragon\'s token fee structure with visual animation","source":"@site/docs/concepts/fee-system.md","sourceDirName":"concepts","slug":"/concepts/fee-system","permalink":"/concepts/fee-system","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/concepts/fee-system.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Token Fee System","sidebar_position":4,"description":"Detailed explanation of OmniDragon\'s token fee structure with visual animation"}}');var r=a(4848),i=a(8453),s=a(6540),o=a(2776),l=a(2087);function d(){const e=(0,s.useRef)(null);return(0,s.useEffect)((()=>{const e=o.default.timeline({easing:"easeOutExpo",duration:3e3,loop:!0,autoplay:!0});return e.add({targets:".token-swap",scale:[0,1],opacity:[0,1],duration:500}),e.add({targets:".fee-collection-arrow",strokeDashoffset:[o.default.setDashoffset,0],easing:"easeInOutSine",duration:700}),e.add({targets:".fee-pool",scale:[1,1.1],backgroundColor:"#4CAF50",duration:500}),e.add({targets:".jackpot-arrow",strokeDashoffset:[o.default.setDashoffset,0],easing:"easeInOutSine",duration:700}),e.add({targets:".jackpot-node",scale:[1,1.1],backgroundColor:"#F9A825",duration:500}),e.add({targets:".ve69lp-arrow",strokeDashoffset:[o.default.setDashoffset,0],easing:"easeInOutSine",duration:700}),e.add({targets:".ve69lp-node",scale:[1,1.1],backgroundColor:"#5C6BC0",duration:500}),e.add({targets:".burn-arrow",strokeDashoffset:[o.default.setDashoffset,0],easing:"easeInOutSine",duration:700}),e.add({targets:".burn-node",scale:[1,1.2],backgroundColor:"#F44336",opacity:[1,.7],duration:800}),e.add({targets:[".token-swap",".jackpot-node",".ve69lp-node",".burn-node",".fee-pool"],scale:[null,1],backgroundColor:function(e){return e.classList.contains("jackpot-node")?"#E19A00":e.classList.contains("ve69lp-node")?"#3F51B5":e.classList.contains("burn-node")?"#D32F2F":e.classList.contains("fee-pool")?"#388E3C":"#333"},opacity:1,duration:500,delay:800}),e.add({targets:[".fee-collection-arrow",".jackpot-arrow",".ve69lp-arrow",".burn-arrow"],opacity:0,duration:100}),e.add({targets:[".fee-collection-arrow",".jackpot-arrow",".ve69lp-arrow",".burn-arrow"],strokeDashoffset:o.default.setDashoffset,opacity:1,duration:1}),()=>{e.pause()}}),[]),(0,r.jsxs)("div",{className:l.A.animationContainer,ref:e,children:[(0,r.jsx)("h3",{className:l.A.animationTitle,children:"Token Fee Distribution Flow"}),(0,r.jsx)("p",{className:l.A.animationDescription,children:"Visualizing how fees are collected and distributed in the OmniDragon ecosystem"}),(0,r.jsxs)("div",{className:l.A.feeSystemContainer,children:[(0,r.jsxs)("div",{className:`${l.A.tokenSwapNode} token-swap`,children:[(0,r.jsx)("div",{className:l.A.nodeLabel,children:"Token Swap"}),(0,r.jsx)("div",{className:l.A.percentTag,children:"10% Fee"})]}),(0,r.jsxs)("svg",{className:l.A.arrowSvg,width:"100%",height:"60",children:[(0,r.jsx)("path",{className:"fee-collection-arrow",d:"M150,30 L250,30",fill:"none",stroke:"#388E3C",strokeWidth:"3"}),(0,r.jsx)("polygon",{points:"250,25 260,30 250,35",fill:"#388E3C"})]}),(0,r.jsx)("div",{className:`${l.A.feePoolNode} fee-pool`,children:(0,r.jsx)("div",{className:l.A.nodeLabel,children:"Fee Pool"})}),(0,r.jsxs)("div",{className:l.A.feeDistributionContainer,children:[(0,r.jsxs)("svg",{className:l.A.arrowSvg,width:"100",height:"80",children:[(0,r.jsx)("path",{className:"jackpot-arrow",d:"M50,1 L50,50",fill:"none",stroke:"#E19A00",strokeWidth:"3"}),(0,r.jsx)("polygon",{points:"45,50 50,60 55,50",fill:"#E19A00"})]}),(0,r.jsxs)("svg",{className:l.A.arrowSvg,width:"100",height:"80",children:[(0,r.jsx)("path",{className:"ve69lp-arrow",d:"M150,1 L150,50",fill:"none",stroke:"#3F51B5",strokeWidth:"3"}),(0,r.jsx)("polygon",{points:"145,50 150,60 155,50",fill:"#3F51B5"})]}),(0,r.jsxs)("svg",{className:l.A.arrowSvg,width:"100",height:"80",children:[(0,r.jsx)("path",{className:"burn-arrow",d:"M250,1 L250,50",fill:"none",stroke:"#D32F2F",strokeWidth:"3"}),(0,r.jsx)("polygon",{points:"245,50 250,60 255,50",fill:"#D32F2F"})]})]}),(0,r.jsxs)("div",{className:l.A.feeDestinationsContainer,children:[(0,r.jsxs)("div",{className:`${l.A.feeDestinationNode} jackpot-node`,children:[(0,r.jsx)("div",{className:l.A.nodeLabel,children:"Jackpot Vault"}),(0,r.jsx)("div",{className:l.A.percentTag,children:"6.9%"})]}),(0,r.jsxs)("div",{className:`${l.A.feeDestinationNode} ve69lp-node`,children:[(0,r.jsx)("div",{className:l.A.nodeLabel,children:"ve69LP"}),(0,r.jsx)("div",{className:l.A.percentTag,children:"2.41%"})]}),(0,r.jsxs)("div",{className:`${l.A.feeDestinationNode} burn-node`,children:[(0,r.jsx)("div",{className:l.A.nodeLabel,children:"Burn"}),(0,r.jsx)("div",{className:l.A.percentTag,children:"0.69%"})]})]})]})]})}a(1672);const c={title:"Token Fee System",sidebar_position:4,description:"Detailed explanation of OmniDragon's token fee structure with visual animation"},u="OmniDragon Token Fee System",p={},h=[{value:"Interactive Fee Flow Visualization",id:"interactive-fee-flow-visualization",level:2},{value:"Fee Structure",id:"fee-structure",level:2},{value:"Buy &amp; Sell Fees (10%)",id:"buy--sell-fees-10",level:3},{value:"Transfer Fees (0.69%)",id:"transfer-fees-069",level:3},{value:"Fee Processing Mechanism",id:"fee-processing-mechanism",level:2},{value:"Jackpot Mechanics",id:"jackpot-mechanics",level:2},{value:"Benefits of the Fee Structure",id:"benefits-of-the-fee-structure",level:2},{value:"Fee Exclusions",id:"fee-exclusions",level:2},{value:"How to Configure Fees (Owner Only)",id:"how-to-configure-fees-owner-only",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"omnidragon-token-fee-system",children:"OmniDragon Token Fee System"})}),"\n",(0,r.jsx)(n.p,{children:"This page provides a detailed explanation of OmniDragon's token fee structure, including how fees are collected, processed, and distributed throughout the ecosystem."}),"\n",(0,r.jsx)(n.h2,{id:"interactive-fee-flow-visualization",children:"Interactive Fee Flow Visualization"}),"\n",(0,r.jsx)(d,{}),"\n",(0,r.jsx)(n.h2,{id:"fee-structure",children:"Fee Structure"}),"\n",(0,r.jsx)(n.p,{children:"OmniDragon implements a multi-tier fee structure designed to sustain the ecosystem through multiple mechanisms:"}),"\n",(0,r.jsx)(n.h3,{id:"buy--sell-fees-10",children:"Buy & Sell Fees (10%)"}),"\n",(0,r.jsx)(n.p,{children:"For both buy and sell transactions, a 10% fee is applied, distributed as follows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"6.9%"})," - Directed to the Jackpot Vault, funding prizes for token holders"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"2.41%"})," - Allocated to ve69LP stakers through the Revenue Distributor"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"0.69%"})," - Permanently burned, reducing total supply"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"transfer-fees-069",children:"Transfer Fees (0.69%)"}),"\n",(0,r.jsx)(n.p,{children:"For regular transfers between wallets (not involving liquidity pools), a reduced fee applies:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"0.69%"})," - Permanently burned, reducing total supply"]}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TB\n  A[Token Transaction] --\x3e|10% Fee| B[Fee Collector]\n  B --\x3e|6.9%| C[Jackpot Vault]\n  B --\x3e|2.41%| D[ve69LP Revenue Distributor]\n  B --\x3e|0.69%| E[Burn Address]\n  C --\x3e|Weekly Prize| F[Lucky Token Holders]\n  D --\x3e|Staking Rewards| G[ve69LP Stakers]"}),"\n",(0,r.jsx)(n.h2,{id:"fee-processing-mechanism",children:"Fee Processing Mechanism"}),"\n",(0,r.jsx)(n.p,{children:"When a swap occurs, fees are collected in $DRAGON tokens. The contract accumulates these tokens until a threshold is reached, then automatically performs the following actions:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Swaps accumulated $DRAGON tokens for wrapped native tokens (e.g., WETH)"}),"\n",(0,r.jsxs)(n.li,{children:["Distributes the wrapped native tokens to:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Jackpot Vault (69% of fees)"}),"\n",(0,r.jsx)(n.li,{children:"Revenue Distributor (24.1% of fees)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Burns the remaining portion (6.9% of fees)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"function swapTokensForWrappedNative(uint256 tokenAmount) private lockTheSwap {\n    // Skip if router or token amount is not valid\n    if (uniswapRouter == address(0) || tokenAmount == 0) return;\n    \n    // Get router interface\n    IUniswapRouter router = IUniswapRouter(uniswapRouter);\n    \n    // Cache wrapped native token address for gas savings\n    address wrappedToken = wrappedNativeToken;\n    \n    // Approve router to spend tokens - only approve what's needed\n    _approve(address(this), uniswapRouter, tokenAmount);\n    \n    // Set up the swap path\n    address[] memory path = new address[](2);\n    path[0] = address(this);\n    path[1] = wrappedToken;\n    \n    // Store balance before swap for accurate received amount calculation\n    uint256 balanceBefore = IERC20(wrappedToken).balanceOf(address(this));\n    \n    // Execute the swap\n    router.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        tokenAmount,\n        0, // Accept any amount of wrapped native\n        path,\n        address(this),\n        block.timestamp + 300\n    );\n    \n    // Calculate how much we received and distribute\n    uint256 wrappedNativeReceived = IERC20(wrappedToken).balanceOf(address(this)) - balanceBefore;\n    \n    emit SwapAndLiquify(tokenAmount, wrappedNativeReceived);\n    \n    // Skip distribution if nothing was received\n    if (wrappedNativeReceived == 0) return;\n    \n    // Calculate fee distribution using cached variables for gas efficiency\n    uint256 totalFeeBasis = buyFees.jackpot + buyFees.ve69LP;\n    \n    // Avoid division by zero\n    if (totalFeeBasis == 0) return;\n    \n    uint256 jackpotShare = (wrappedNativeReceived * buyFees.jackpot) / totalFeeBasis;\n    uint256 ve69Share = wrappedNativeReceived - jackpotShare; // Optimized to avoid additional math\n    \n    // Distribute fees\n    _distributeFees(jackpotShare, ve69Share);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"jackpot-mechanics",children:"Jackpot Mechanics"}),"\n",(0,r.jsx)(n.p,{children:"The Jackpot Vault accumulates 6.9% of all buy and sell fees. This creates a growing prize pool that is awarded to lucky token holders on a regular schedule."}),"\n",(0,r.jsx)(n.mermaid,{value:'pie title Jackpot Distribution\n    "Current Week\'s Prize" : 69\n    "Next Week\'s Prize Seed" : 21\n    "Partner Rewards" : 10'}),"\n",(0,r.jsx)(n.h2,{id:"benefits-of-the-fee-structure",children:"Benefits of the Fee Structure"}),"\n",(0,r.jsx)(n.p,{children:"OmniDragon's fee structure provides several key benefits to the ecosystem:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sustainable Rewards"}),": The Jackpot system creates ongoing incentives for holding tokens"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Governance Incentives"}),": ve69LP stakers receive a share of all transaction fees"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deflationary Mechanism"}),": Continuous burning creates a deflationary effect, potentially increasing token value over time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ecosystem Growth"}),": Fee revenue funds further development and expansion"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fee-exclusions",children:"Fee Exclusions"}),"\n",(0,r.jsx)(n.p,{children:"Certain addresses are excluded from fees to ensure proper ecosystem functioning:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Contract addresses (OmniDragon, Jackpot Vault, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Wrapped native token addresses"}),"\n",(0,r.jsx)(n.li,{children:"Owner address (for initial setup and emergency operations)"}),"\n",(0,r.jsx)(n.li,{children:"Partner pool addresses"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This ensures that internal system operations don't incur unnecessary fees."}),"\n",(0,r.jsx)(n.h2,{id:"how-to-configure-fees-owner-only",children:"How to Configure Fees (Owner Only)"}),"\n",(0,r.jsx)(n.p,{children:"Fee percentages can be adjusted by the contract owner if needed, with the following limitations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Total fees cannot exceed 15% (gas optimization and fairness constraint)"}),"\n",(0,r.jsx)(n.li,{children:"Individual fee components can be adjusted separately for buys, sells, and transfers"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'function setBuyFees(uint256 jackpotFee, uint256 ve69Fee, uint256 burnFee) external onlyOwner {\n    buyFees.total = _validateFees(jackpotFee, ve69Fee, burnFee);\n    buyFees.jackpot = jackpotFee;\n    buyFees.ve69LP = ve69Fee;\n    buyFees.burn = burnFee;\n    \n    emit FeesUpdated("Buy", jackpotFee, ve69Fee, burnFee, buyFees.total);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This flexible structure allows for future optimization of the fee model while maintaining its core benefits."})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},1672:(e,n,a)=>{a.d(n,{A:()=>l});var t=a(6540),r=a(1425),i=(a(9136),a(5363)),s=a(2087),o=a(4848);function l(e){return(0,o.jsx)(i.A,{fallback:(0,o.jsx)("div",{className:"mermaid-loading",children:"Loading diagram..."}),children:()=>(0,o.jsx)(d,{...e})})}function d({chart:e,title:n,caption:a,className:i,animated:l=!0,pulseSelector:d,animationOptions:c={}}){const u=(0,t.useRef)(null),[p,h]=(0,t.useState)(0),[m,f]=(0,t.useState)(null),[v,g]=(0,t.useState)(!1),x=e?.trim()||"";(0,t.useEffect)((()=>{if(u.current)if(f(null),g(!1),window.mermaid)try{const e="dark"===document.documentElement.dataset.theme;window.mermaid.initialize({theme:e?"dark":"default",themeVariables:{darkMode:e},securityLevel:"loose"});const n=setTimeout((()=>{try{window.mermaid.init(void 0,u.current.querySelectorAll(".mermaid:not(.processed)")),u.current.querySelectorAll(".mermaid").forEach((e=>{e.classList.add("processed")})),g(!0),l&&setTimeout((()=>{const e=u.current.querySelector(".docusaurus-mermaid-container");e&&(0,r._g)(e,{pulseSelector:d,...c})}),100)}catch(e){console.error("Failed to render mermaid diagram:",e),f(e.message),p<3&&h((e=>e+1))}}),50);return()=>clearTimeout(n)}catch(e){console.error("Failed to initialize mermaid:",e),f(e.message)}else f("Mermaid library not available")}),[e,p,l,d]);const j=[s.A.enhancedMermaidContainer||"",i||"",v&&s.A.rendered||""].filter(Boolean).join(" ");return(0,o.jsxs)("div",{ref:u,className:j,children:[n&&(0,o.jsx)("h3",{className:s.A.mermaidTitle||"",children:n}),(0,o.jsx)("div",{className:"docusaurus-mermaid-container",children:m?(0,o.jsxs)("div",{className:s.A.mermaidError,children:[(0,o.jsx)("p",{children:"Error rendering diagram."}),(0,o.jsxs)("details",{children:[(0,o.jsx)("summary",{children:"View error details"}),(0,o.jsx)("pre",{children:m})]})]}):(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("pre",{className:"mermaid",children:x}),!v&&(0,o.jsx)("div",{className:s.A.mermaidLoading||"",children:(0,o.jsxs)("div",{className:s.A.loadingIndicator||"",children:[(0,o.jsx)("span",{}),(0,o.jsx)("span",{}),(0,o.jsx)("span",{})]})})]})}),a&&(0,o.jsx)("p",{className:s.A.mermaidCaption||"",children:a})]})}},2087:(e,n,a)=>{a.d(n,{A:()=>t});const t={animationContainer:"animationContainer_qFbi",animationTitle:"animationTitle_Aunz",animationDescription:"animationDescription_Ov4W",animationError:"animationError_yvkm",votingPowerContainer:"votingPowerContainer_rVam",timelineLabels:"timelineLabels_ymyL",votingPowerTrack:"votingPowerTrack_ioTj","voting-power-bar":"voting-power-bar_YdRF",partnerBoostContainer:"partnerBoostContainer_Nbx6",partner:"partner_oQK4",partnerName:"partnerName_jHI0",boostTrack:"boostTrack_sueO","boost-fill":"boost-fill_csU7",percentage:"percentage_BL8G",totalAllocation:"totalAllocation_q9KR",totalLabel:"totalLabel_p4kt",totalBar:"totalBar_mqeA",pulse:"pulse_iDMA",calculationContainer:"calculationContainer_ZWH2",inputSide:"inputSide_qcOC",resultSide:"resultSide_AwPG",arrowRight:"arrowRight_wgI2",processingText:"processingText_xIPk","input-cube":"input-cube_V7bs","result-cube":"result-cube_ls1g","input-value":"input-value_hal2","result-value":"result-value_TNvy",crossChainContainer:"crossChainContainer_uGQt",chainBox:"chainBox_JwIk",chainLabel:"chainLabel_WrpK",nodeBox:"nodeBox_voFk",nodeLabel:"nodeLabel_yKzM",arrowSvg:"arrowSvg_BK05",mermaidContainer:"mermaidContainer_KO9S",mermaidTitle:"mermaidTitle_u_uO",mermaidCaption:"mermaidCaption_wbnp",feeSystemContainer:"feeSystemContainer__h_q",tokenSwapNode:"tokenSwapNode_lvrn",feePoolNode:"feePoolNode_iq4E",feeDistributionContainer:"feeDistributionContainer_Ql3t",feeDestinationsContainer:"feeDestinationsContainer_OiiH",feeDestinationNode:"feeDestinationNode_Q2q4","jackpot-node":"jackpot-node_U6t5","ve69lp-node":"ve69lp-node_mq1a","burn-node":"burn-node_Ktzb",percentTag:"percentTag_FQpB",mermaidError:"mermaidError_GTf9",mermaidLoading:"mermaidLoading_iCyq",animatedDiagramContainer:"animatedDiagramContainer__0gF",animatedContent:"animatedContent_QaIs",animatedNode:"animatedNode_MLYw",connectionSvg:"connectionSvg_kuFY",connectionLabel:"connectionLabel_BwvR",nodeContract:"nodeContract_mLML",nodeEvent:"nodeEvent_qLpj",nodeProcess:"nodeProcess_N9cH",nodeUser:"nodeUser_IMZv",flowChartContainer:"flowChartContainer_LoOU",flowChartStep:"flowChartStep_hHlJ",flowChartIcon:"flowChartIcon_d9lt",flowChartText:"flowChartText_Oh32",animationLoading:"animationLoading_vAVv",enhancedMermaidContainer:"enhancedMermaidContainer_IPf6",loadingIndicator:"loadingIndicator_dVEi",loadingPulse:"loadingPulse_FCIa",rendered:"rendered_Ku9G",fadeIn:"fadeIn_GJ3U",animatedCard:"animatedCard_m5VD",withHover:"withHover_QfE_",cardIcon:"cardIcon_BHXH",cardTitle:"cardTitle_Ppq0",cardContent:"cardContent_d8Ko","cardColor--primary":"cardColor--primary_gH3B","cardColor--success":"cardColor--success_DN36","cardColor--warning":"cardColor--warning_pEQU","cardColor--danger":"cardColor--danger_jZsL",standardMermaidContainer:"standardMermaidContainer_NOO0",mermaid:"mermaid_IJ4R",processed:"processed_VcJq",mermaidWrapper:"mermaidWrapper_XkJf",mermaidContent:"mermaidContent_UpoX"}},5363:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var t=a(9136),r=a(4848);function i({children:e,fallback:n}){return(0,t.A)()?(0,r.jsx)(r.Fragment,{children:e?.()}):n??null}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(6540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);