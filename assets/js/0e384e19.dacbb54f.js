"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[3976],{7879:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"intro","title":"Introduction","description":"Welcome to Sonic Red Dragon documentation!","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"concepts","next":{"title":"Overview","permalink":"/concepts/overview"}}');var t=r(4848),i=r(8453);const s={sidebar_position:1},a="Introduction",c={},d=[{value:"What is Sonic Red Dragon?",id:"what-is-sonic-red-dragon",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Ecosystem Components",id:"ecosystem-components",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Randomness System",id:"randomness-system",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Community",id:"community",level:2},{value:"Contributing",id:"contributing",level:2}];function l(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsx)(n.p,{children:"Welcome to Sonic Red Dragon documentation!"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Last updated: Added workflow automation for documentation deployment"})}),"\n",(0,t.jsx)(n.p,{children:"Sonic Red Dragon is a LayerZero V2 compatible token that brings unique features and capabilities to the cross-chain ecosystem."}),"\n",(0,t.jsx)(n.h2,{id:"what-is-sonic-red-dragon",children:"What is Sonic Red Dragon?"}),"\n",(0,t.jsx)(n.p,{children:"Sonic Red Dragon is a next-generation token built on the LayerZero V2 protocol, designed to provide seamless cross-chain functionality while maintaining high security and efficiency. Our token leverages advanced cryptographic techniques and the dRAND network for verifiable randomness, making it ideal for various DeFi applications."}),"\n",(0,t.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\n    A[User] --\x3e|Request| B[Ethereum]\n    A --\x3e|Request| C[Sonic]\n    A --\x3e|Request| D[Arbitrum]\n    B <--\x3e|LayerZero| C\n    B <--\x3e|LayerZero| D\n    C <--\x3e|LayerZero| D\n    B --\x3e E[Sonic Red Dragon Protocol]\n    C --\x3e E\n    D --\x3e E"}),"\n",(0,t.jsx)(n.h2,{id:"ecosystem-components",children:"Ecosystem Components"}),"\n",(0,t.jsx)(n.p,{children:"Sonic Red Dragon creates a comprehensive ecosystem with several interconnected components:"}),"\n",(0,t.jsx)(n.mermaid,{value:'flowchart LR\n    %% Color classes for different components\n    classDef coreSystem fill:#e1f5fe,stroke:#0288d1,stroke-width:2px,color:#000000\n    classDef tokenSystem fill:#e8eaf6,stroke:#5c6bc0,stroke-width:2px,color:#000000\n    classDef userSystem fill:#fff3e0,stroke:#f57c00,stroke-width:2px,color:#000000\n    \n    %% Core Protocol\n    subgraph Core["Core Protocol"]\n        direction TB\n        \n        OmniDragon["OmniDragon Token<br>\u2022 ERC20 with lottery<br>\u2022 Cross-chain capability<br>\u2022 Fee distribution"]:::coreSystem\n        SwapTriggerOracle["SwapTriggerOracle<br>\u2022 Monitors trading<br>\u2022 Triggers lottery draws"]:::coreSystem\n        ChainRegistry["ChainRegistry<br>\u2022 Manages chain IDs<br>\u2022 Cross-chain config"]:::coreSystem\n        \n        LPToken["69LP Token<br>\u2022 Liquidity provider<br>\u2022 Earns trading fees"]:::tokenSystem\n    end\n    \n    %% User Journey\n    subgraph Journey["User Journey"]\n        direction TB\n        \n        User["User"]:::userSystem\n        Trading["Trading<br>\u2022 Buy/Sell<br>\u2022 Generates fees<br>\u2022 Lottery entry"]:::userSystem\n        AddLiquidity["Add Liquidity<br>\u2022 Create LP tokens<br>\u2022 Earn fees"]:::userSystem\n        StakeLock["Stake & Lock<br>\u2022 69LP \u2192 ve69LP<br>\u2022 Governance rights"]:::userSystem\n        Vote["Vote & Boost<br>\u2022 Governance<br>\u2022 Direct boost"]:::userSystem\n        Collect["Collect Rewards<br>\u2022 Fee distribution<br>\u2022 Lottery winnings"]:::userSystem\n    end\n    \n    %% Connect Components\n    User --\x3e Trading\n    Trading --\x3e AddLiquidity\n    AddLiquidity --\x3e StakeLock\n    StakeLock --\x3e Vote\n    Vote --\x3e Collect\n    Trading --\x3e OmniDragon\n    OmniDragon -- "Powers" --\x3e SwapTriggerOracle\n    ChainRegistry -- "Configures" --\x3e OmniDragon\n    \n    %% Style the containers\n    style Core fill:#e1f5fe,stroke:#0288d1,stroke-width:2px\n    style Journey fill:#fff9c4,stroke:#ffb300,stroke-width:2px'}),"\n",(0,t.jsxs)(n.p,{children:["For a more detailed view of the ecosystem architecture, you can explore our ",(0,t.jsx)(n.a,{href:"./ecosystem/architecture",children:"complete ecosystem diagrams"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LayerZero V2 Compatibility"}),": Seamless cross-chain operations with enhanced security"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dRAND Integration"}),": Verifiable randomness for fair and transparent operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advanced Security"}),": Built with modern cryptographic primitives"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cross-Chain Functionality"}),": Operate across multiple blockchain networks"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Developer-Friendly"}),": Comprehensive documentation and easy integration"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"randomness-system",children:"Randomness System"}),"\n",(0,t.jsx)(n.p,{children:"One of our standout features is the advanced randomness system that powers our lottery mechanism:"}),"\n",(0,t.jsx)(n.mermaid,{value:'flowchart LR\n    %% Color classes for different components\n    classDef randomSource fill:#e1f5fe,stroke:#1976d2,stroke-width:2px,color:#000000\n    classDef processor fill:#fff3e0,stroke:#ff9800,stroke-width:2px,color:#000000\n    \n    %% Randomness Sources\n    DrandDefault["drand Default<br>League of Entropy"]:::randomSource\n    DrandEVM["drand EVMNet<br>3s period"]:::randomSource\n    ChainlinkVRF["Chainlink VRF 2.5<br>On-demand"]:::randomSource\n    \n    %% Processors\n    Integrators["Verification Layer<br>\u2022 Proof validation<br>\u2022 Format conversion"]:::processor\n    VRFConsumer["OmniDragon VRF Consumer<br>\u2022 Aggregates sources<br>\u2022 Fallback system<br>\u2022 Security measures"]:::processor\n    SwapTrigger["Swap Trigger Oracle<br>\u2022 Receives random values<br>\u2022 Determines winners"]:::processor\n    \n    %% Flow\n    DrandDefault --\x3e Integrators\n    DrandEVM --\x3e Integrators\n    ChainlinkVRF --\x3e Integrators\n    Integrators --\x3e VRFConsumer\n    VRFConsumer --\x3e SwapTrigger'}),"\n",(0,t.jsx)(n.p,{children:"Our randomness system combines multiple sources including drand networks and Chainlink VRF to ensure reliable and verifiable random number generation for our lottery mechanism."}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.p,{children:"To start using Sonic Red Dragon in your project:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Review the ",(0,t.jsx)(n.a,{href:"./contracts/overview",children:"Contracts Overview"})," to understand our smart contract architecture"]}),"\n",(0,t.jsxs)(n.li,{children:["Learn about our ",(0,t.jsx)(n.a,{href:"./ecosystem/drand-network",children:"Randomness System"})," for verifiable random number generation"]}),"\n",(0,t.jsx)(n.li,{children:"Check out our GitHub repository for implementation examples"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"community",children:"Community"}),"\n",(0,t.jsx)(n.p,{children:"Join our community to stay updated and get support:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://t.me/SonicRedDragon",children:"Telegram"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://discord.gg/sonicreddragon",children:"Discord"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://twitter.com/sonicreddragon",children:"Twitter"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/wenakita/omnidragon",children:"GitHub"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,t.jsx)(n.p,{children:"We welcome contributions from the community! Whether it's improving documentation, reporting bugs, or suggesting new features, your input helps make Sonic Red Dragon better for everyone."}),"\n",(0,t.jsxs)(n.p,{children:["Visit our ",(0,t.jsx)(n.a,{href:"https://github.com/wenakita/omnidragon",children:"GitHub repository"})," to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Report issues"}),"\n",(0,t.jsx)(n.li,{children:"Submit pull requests"}),"\n",(0,t.jsx)(n.li,{children:"Review our code"}),"\n",(0,t.jsx)(n.li,{children:"Join discussions"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var o=r(6540);const t={},i=o.createContext(t);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);