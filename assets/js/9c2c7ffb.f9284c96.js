"use strict";(self.webpackChunksonic_red_dragon_docs=self.webpackChunksonic_red_dragon_docs||[]).push([[5805],{4236:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"smart-contracts/randomness","title":"Sonic Red Dragon Randomness","description":"This document provides technical details about the Sonic Red Dragon randomness contract implementation, which integrates with dRAND for verifiable randomness generation.","source":"@site/docs/smart-contracts/randomness.md","sourceDirName":"smart-contracts","slug":"/smart-contracts/randomness","permalink":"/smart-contracts/randomness","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/smart-contracts/randomness.md","tags":[],"version":"current","frontMatter":{}}');var r=s(4848),t=s(8453);const l={},a="Sonic Red Dragon Randomness",d={},o=[{value:"Contract Overview",id:"contract-overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Contract Interfaces",id:"contract-interfaces",level:2},{value:"IDRANDConsumer",id:"idrandconsumer",level:3},{value:"ISonicRedDragonRandomness",id:"isonicreddragonrandomness",level:3},{value:"Constructor Parameters",id:"constructor-parameters",level:2},{value:"Main Functions",id:"main-functions",level:2},{value:"Randomness Functions",id:"randomness-functions",level:3},{value:"Security Functions",id:"security-functions",level:3},{value:"View Functions",id:"view-functions",level:3},{value:"Events",id:"events",level:2},{value:"Security Features",id:"security-features",level:2},{value:"Access Control",id:"access-control",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Proof Verification",id:"proof-verification",level:3},{value:"Fallback Mechanisms",id:"fallback-mechanisms",level:3},{value:"dRAND Integration",id:"drand-integration",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Development",id:"development",level:2},{value:"Contract Verification",id:"contract-verification",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"sonic-red-dragon-randomness",children:"Sonic Red Dragon Randomness"})}),"\n",(0,r.jsx)(e.p,{children:"This document provides technical details about the Sonic Red Dragon randomness contract implementation, which integrates with dRAND for verifiable randomness generation."}),"\n",(0,r.jsx)(e.h2,{id:"contract-overview",children:"Contract Overview"}),"\n",(0,r.jsx)(e.p,{children:"The Sonic Red Dragon randomness contract integrates with the dRAND network to provide cryptographically secure and verifiable randomness for various on-chain applications."}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Contract Address (Ethereum)"}),": Coming Soon"]}),"\n",(0,r.jsx)(e.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"dRAND network integration"}),"\n",(0,r.jsx)(e.li,{children:"Verifiable randomness"}),"\n",(0,r.jsx)(e.li,{children:"Cross-chain randomness"}),"\n",(0,r.jsx)(e.li,{children:"Request batching"}),"\n",(0,r.jsx)(e.li,{children:"Fallback mechanisms"}),"\n",(0,r.jsx)(e.li,{children:"Rate limiting"}),"\n",(0,r.jsx)(e.li,{children:"Role-based access control"}),"\n",(0,r.jsx)(e.li,{children:"Emergency controls"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"contract-interfaces",children:"Contract Interfaces"}),"\n",(0,r.jsx)(e.h3,{id:"idrandconsumer",children:"IDRANDConsumer"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"interface IDRANDConsumer {\n    function requestRandomness(\n        uint256 _roundId,\n        bytes calldata _callbackData\n    ) external returns (uint256 requestId);\n\n    function fulfillRandomness(\n        uint256 _requestId,\n        uint256 _randomness,\n        bytes calldata _proof\n    ) external;\n\n    function getRandomness(uint256 _roundId) external view returns (uint256);\n    function isRandomnessReady(uint256 _roundId) external view returns (bool);\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"isonicreddragonrandomness",children:"ISonicRedDragonRandomness"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"interface ISonicRedDragonRandomness {\n    function setDRANDEndpoint(address _endpoint) external;\n    function setMaxRequestsPerRound(uint256 _maxRequests) external;\n    function setCallbackGasLimit(uint256 _gasLimit) external;\n    function pause() external;\n    function unpause() external;\n    function isPaused() external view returns (bool);\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"constructor-parameters",children:"Constructor Parameters"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"constructor(\n    address _drandEndpoint,\n    address _securityManager,\n    uint256 _maxRequestsPerRound,\n    uint256 _callbackGasLimit\n)\n"})}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Parameter"}),(0,r.jsx)(e.th,{children:"Type"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"_drandEndpoint"}),(0,r.jsx)(e.td,{children:"address"}),(0,r.jsx)(e.td,{children:"dRAND network endpoint"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"_securityManager"}),(0,r.jsx)(e.td,{children:"address"}),(0,r.jsx)(e.td,{children:"Security manager contract"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"_maxRequestsPerRound"}),(0,r.jsx)(e.td,{children:"uint256"}),(0,r.jsx)(e.td,{children:"Maximum requests per dRAND round"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"_callbackGasLimit"}),(0,r.jsx)(e.td,{children:"uint256"}),(0,r.jsx)(e.td,{children:"Gas limit for callback execution"})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"main-functions",children:"Main Functions"}),"\n",(0,r.jsx)(e.h3,{id:"randomness-functions",children:"Randomness Functions"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"function requestRandomness(\n    uint256 _roundId,\n    bytes calldata _callbackData\n) external returns (uint256 requestId)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Requests randomness from dRAND for a specific round."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"function fulfillRandomness(\n    uint256 _requestId,\n    uint256 _randomness,\n    bytes calldata _proof\n) external\n"})}),"\n",(0,r.jsx)(e.p,{children:"Fulfills a randomness request with dRAND proof."}),"\n",(0,r.jsx)(e.h3,{id:"security-functions",children:"Security Functions"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"function setDRANDEndpoint(address _endpoint) external onlyRole(ADMIN_ROLE)\nfunction setMaxRequestsPerRound(uint256 _maxRequests) external onlyRole(ADMIN_ROLE)\nfunction setCallbackGasLimit(uint256 _gasLimit) external onlyRole(ADMIN_ROLE)\nfunction pause() external onlyRole(PAUSER_ROLE)\nfunction unpause() external onlyRole(PAUSER_ROLE)\n"})}),"\n",(0,r.jsx)(e.h3,{id:"view-functions",children:"View Functions"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"function getRandomness(uint256 _roundId) external view returns (uint256)\nfunction isRandomnessReady(uint256 _roundId) external view returns (bool)\nfunction getRequestStatus(uint256 _requestId) external view returns (RequestStatus)\nfunction getMaxRequestsPerRound() external view returns (uint256)\nfunction getCallbackGasLimit() external view returns (uint256)\n"})}),"\n",(0,r.jsx)(e.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"event RandomnessRequested(\n    uint256 indexed requestId,\n    uint256 indexed roundId,\n    address indexed requester,\n    bytes callbackData\n);\nevent RandomnessFulfilled(\n    uint256 indexed requestId,\n    uint256 indexed roundId,\n    uint256 randomness,\n    bytes proof\n);\nevent DRANDEndpointUpdated(address newEndpoint);\nevent MaxRequestsPerRoundUpdated(uint256 newMaxRequests);\nevent CallbackGasLimitUpdated(uint256 newGasLimit);\nevent RandomnessPaused(address indexed pauser);\nevent RandomnessUnpaused(address indexed unpauser);\n"})}),"\n",(0,r.jsx)(e.h2,{id:"security-features",children:"Security Features"}),"\n",(0,r.jsx)(e.p,{children:"The randomness contract implements multiple security layers:"}),"\n",(0,r.jsx)(e.h3,{id:"access-control",children:"Access Control"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Role-based permissions for administrative functions"}),"\n",(0,r.jsx)(e.li,{children:"Request validation and authorization"}),"\n",(0,r.jsx)(e.li,{children:"Pausable functionality for emergencies"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Maximum requests per round"}),"\n",(0,r.jsx)(e.li,{children:"Request throttling"}),"\n",(0,r.jsx)(e.li,{children:"Callback gas limits"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"proof-verification",children:"Proof Verification"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"dRAND proof validation"}),"\n",(0,r.jsx)(e.li,{children:"Round verification"}),"\n",(0,r.jsx)(e.li,{children:"Request validation"}),"\n",(0,r.jsx)(e.li,{children:"Callback validation"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"fallback-mechanisms",children:"Fallback Mechanisms"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Multiple dRAND endpoints"}),"\n",(0,r.jsx)(e.li,{children:"Request retry logic"}),"\n",(0,r.jsx)(e.li,{children:"Emergency fallback sources"}),"\n",(0,r.jsx)(e.li,{children:"State recovery"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"drand-integration",children:"dRAND Integration"}),"\n",(0,r.jsx)(e.p,{children:"The contract integrates with dRAND:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"contract SonicRedDragonRandomness is IDRANDConsumer, AccessControl, Pausable {\n    // Contract implementation\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"This enables:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Verifiable randomness generation"}),"\n",(0,r.jsx)(e.li,{children:"Cross-chain randomness distribution"}),"\n",(0,r.jsx)(e.li,{children:"Request batching and optimization"}),"\n",(0,r.jsx)(e.li,{children:"Proof verification"}),"\n",(0,r.jsx)(e.li,{children:"Emergency controls"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(e.p,{children:"The contract implements robust error handling:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Validation Errors"}),": Invalid parameters or states"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Security Errors"}),": Unauthorized access attempts"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Rate Limit Errors"}),": Exceeded request limits"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Proof Errors"}),": Invalid dRAND proofs"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Recovery Mechanisms"}),": Administrative recovery options"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"development",children:"Development"}),"\n",(0,r.jsx)(e.p,{children:"For developers looking to interact with the randomness contract:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Install dependencies:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npm install @sonicreddragon/contracts\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Import the contract:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:'import "@sonicreddragon/contracts/SonicRedDragonRandomness.sol";\n'})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Example usage:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-solidity",children:"// Request randomness\nconst requestId = await randomness.requestRandomness(\n    roundId,\n    callbackData\n);\n\n// Check randomness status\nconst isReady = await randomness.isRandomnessReady(roundId);\nconst randomValue = await randomness.getRandomness(roundId);\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"contract-verification",children:"Contract Verification"}),"\n",(0,r.jsx)(e.p,{children:"The randomness contract source code will be verified on all deployed chain explorers:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Ethereum Explorer (Coming Soon)"}),"\n",(0,r.jsx)(e.li,{children:"Arbitrum Explorer (Coming Soon)"}),"\n",(0,r.jsx)(e.li,{children:"Optimism Explorer (Coming Soon)"}),"\n",(0,r.jsx)(e.li,{children:"Base Explorer (Coming Soon)"}),"\n",(0,r.jsx)(e.li,{children:"Polygon Explorer (Coming Soon)"}),"\n",(0,r.jsx)(e.li,{children:"Avalanche Explorer (Coming Soon)"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(e.p,{children:"When using the randomness contract:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Request Management"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Monitor request status"}),"\n",(0,r.jsx)(e.li,{children:"Handle failed requests"}),"\n",(0,r.jsx)(e.li,{children:"Implement retry logic"}),"\n",(0,r.jsx)(e.li,{children:"Use appropriate gas limits"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Security"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Verify randomness proofs"}),"\n",(0,r.jsx)(e.li,{children:"Implement rate limiting"}),"\n",(0,r.jsx)(e.li,{children:"Use secure callback patterns"}),"\n",(0,r.jsx)(e.li,{children:"Monitor for anomalies"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Integration"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Test with testnet dRAND"}),"\n",(0,r.jsx)(e.li,{children:"Implement fallback mechanisms"}),"\n",(0,r.jsx)(e.li,{children:"Handle cross-chain scenarios"}),"\n",(0,r.jsx)(e.li,{children:"Monitor gas costs"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Maintenance"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Regular security audits"}),"\n",(0,r.jsx)(e.li,{children:"Endpoint monitoring"}),"\n",(0,r.jsx)(e.li,{children:"Performance optimization"}),"\n",(0,r.jsx)(e.li,{children:"Emergency response plan"}),"\n"]}),"\n"]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>a});var i=s(6540);const r={},t=i.createContext(r);function l(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);