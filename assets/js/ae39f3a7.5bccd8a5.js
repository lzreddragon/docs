"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[424],{1836:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"ecosystem/drand-network","title":"Drand Network Integration","description":"This documentation explains the integration of the drand randomness beacon network with the OmniDragon ecosystem.","source":"@site/docs/ecosystem/drand-network.md","sourceDirName":"ecosystem","slug":"/ecosystem/drand-network","permalink":"/ecosystem/drand-network","draft":false,"unlisted":false,"editUrl":"https://github.com/wenakita/sonicreddragon-docs/edit/main/docs/ecosystem/drand-network.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Contracts Overview","permalink":"/contracts/overview"},"next":{"title":"Create a Document","permalink":"/tutorial-basics/create-a-document"}}');var i=s(4848),a=s(8453);const t={},o="Drand Network Integration",d={},l=[{value:"What is drand?",id:"what-is-drand",level:2},{value:"Supported Networks",id:"supported-networks",level:2},{value:"Multi-Source Randomness Aggregation",id:"multi-source-randomness-aggregation",level:2},{value:"System Architecture",id:"system-architecture",level:3},{value:"OmniDragonVRFConsumer",id:"omnidragonvrfconsumer",level:3},{value:"Randomness Buffer Design",id:"randomness-buffer-design",level:3},{value:"How It Works",id:"how-it-works",level:4},{value:"Request and Fulfillment Flow",id:"request-and-fulfillment-flow",level:3},{value:"Benefits of Multi-Source Randomness",id:"benefits-of-multi-source-randomness",level:3},{value:"Integration Architecture",id:"integration-architecture",level:2},{value:"Usage in Smart Contracts",id:"usage-in-smart-contracts",level:2},{value:"Basic Usage with Single Source",id:"basic-usage-with-single-source",level:3},{value:"Advanced Usage with OmniDragonVRFConsumer",id:"advanced-usage-with-omnidragonvrfconsumer",level:3},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Further Reading",id:"further-reading",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"drand-network-integration",children:"Drand Network Integration"})}),"\n",(0,i.jsx)(n.p,{children:"This documentation explains the integration of the drand randomness beacon network with the OmniDragon ecosystem."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-drand",children:"What is drand?"}),"\n",(0,i.jsx)(n.p,{children:"drand is a distributed randomness beacon that provides publicly verifiable, unpredictable and unbiasable random values at regular intervals. The randomness is generated in a distributed way by a set of nodes and is available for free to anyone."}),"\n",(0,i.jsx)(n.h2,{id:"supported-networks",children:"Supported Networks"}),"\n",(0,i.jsx)(n.p,{children:"The OmniDragon system currently supports the following drand networks:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"League of Entropy Mainnet"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Chain Hash: ",(0,i.jsx)(n.code,{children:"8990e7a9aaed2ffed73dbd7092123d6f289930540d7651336225dc172e51b2ce"})]}),"\n",(0,i.jsx)(n.li,{children:"Period: 30 seconds"}),"\n",(0,i.jsxs)(n.li,{children:["Public Key: ",(0,i.jsx)(n.code,{children:"868f005eb8e6e4ca0a47c8a77ceaa5309a47978a7c71bc5cce96366b5d7a569937c529eeda66c7293784a9402801af31"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Quicknet"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Chain Hash: ",(0,i.jsx)(n.code,{children:"52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971"})]}),"\n",(0,i.jsx)(n.li,{children:"Period: 3 seconds"}),"\n",(0,i.jsxs)(n.li,{children:["Public Key: ",(0,i.jsx)(n.code,{children:"83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"EVMnet"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Chain Hash: ",(0,i.jsx)(n.code,{children:"04f1e9062b8a81f848fded9c12306733282b2727ecced50032187751166ec8c3"})]}),"\n",(0,i.jsx)(n.li,{children:"Period: 3 seconds"}),"\n",(0,i.jsxs)(n.li,{children:["Public Key: ",(0,i.jsx)(n.code,{children:"07e1d1d335df83fa98462005690372c643340060d205306a9aa8106b6bd0b3820557ec32c2ad488e4d4f6008f89a346f18492092ccc0d594610de2732c8b808f0095685ae3a85ba243747b1b2f426049010f6b73a0cf1d389351d5aaaa1047f6297d3a4f9749b33eb2d904c9d9ebf17224150ddd7abd7567a9bec6c74480ee0b"})]}),"\n",(0,i.jsx)(n.li,{children:"Blockchain Optimized: Uses BLS-BN254 cryptographic curve which has native support in Ethereum and other EVM chains, resulting in lower gas costs for on-chain verification"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"multi-source-randomness-aggregation",children:"Multi-Source Randomness Aggregation"}),"\n",(0,i.jsx)(n.p,{children:"OmniDragon uses a unique multi-source randomness approach to enhance security and reliability:"}),"\n",(0,i.jsx)(n.h3,{id:"system-architecture",children:"System Architecture"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://mermaid.live/edit#pako:eNqdVmtv4jgU_SuWK8SORLskTihEq5Fa-lAlpjttR_0ww34wyU1ikdiR40zLVPz3vU4KBDpTUbAUfHzPub4Pxc4LDVUENKCdzstUEiKkMAGpp4R0TQo5dAPSnfESur326iPXgs8yKLtrOppiJc2D-FVrnEHxvNKgqdAi53oxVpnS1nwU17-3jG_wbDYs17HjLetc6Qj0hnd-YUeLlwkJG_Po0o6W2YA2YiueK9-ObsNYrpKNM_UUplybrTxTk2cTPoPMpm90BRvHYaV_rmomytaOEgv9UPBQyATNp_2NRXM531gG_dcQ7B8-lp3OVNqxDoV8O28oZTVLNC9SMqX3XEYql1CW5EFVOoRySlcbEDJRlz-mdAI8qYComFxKo1Wx-Gem__7M-iX5ClqoaEr_20jublFxV4lwLsE0xN_yLh-_IBGf79PGE2SNUy4kNmZOHu-v1maQUTN5k9SNNIBzI5QkE74A3c7pxkGPF5onSqK3FVXpOoi_MONPWwHcuO_RV4nuaNh7mibnHYXXTnNLtEe-Z0miIflDvmfX1-j731yKdURjJcsqh9d4XL9DnkAkqSHAw_TTHhuuHLzdbWyre81zIMgxmoem3O6nLeeVkFyGgmfkrCgyEdaR7_BsCa_VT9CWCuRhURrIyz_Fhm0jx8efsbkNvrttoNtALHmDWYPHkwZ6bR83Tr2I9XrF7g5mO9jbxs0TYb08dnawu4OZfTfruppFBnUGsciy4CgeRT74vRJftTkER4yx1_nxk4hMGjjFc1uIqR6kszU5SIjF-6CurcYqN2qof3vvit04TMcO1Hkf1bXVtsuNPBrGQ3A-KB-vijRj0I_j_VvjHqhj--tojyZaRDSIeVZCj-IxkHOLaX3PTWl9z09pgNOI67k9HZYoKrj8rlROg_reo1pVSbp2UhURN3AhOJ4w-XpV41tuL-tKGhq4rlM7ocELfaaBM3JP3IE_8J2hw5jnDAY9ukCW1z9hzqjPRj479YanPlv26K963_7J0D31-95g5HkDZ-i6Xo9CJPCI_dJ8y9SfNMv_AaBxqwM",children:(0,i.jsx)(n.img,{src:"https://mermaid.ink/img/pako:eNqdVmtv4jgU_SuWK8SORLskTihEq5Fa-lAlpjttR_0ww34wyU1ikdiR40zLVPz3vU4KBDpTUbAUfHzPub4Pxc4LDVUENKCdzstUEiKkMAGpp4R0TQo5dAPSnfESur326iPXgs8yKLtrOppiJc2D-FVrnEHxvNKgqdAi53oxVpnS1nwU17-3jG_wbDYs17HjLetc6Qj0hnd-YUeLlwkJG_Po0o6W2YA2YiueK9-ObsNYrpKNM_UUplybrTxTk2cTPoPMpm90BRvHYaV_rmomytaOEgv9UPBQyATNp_2NRXM531gG_dcQ7B8-lp3OVNqxDoV8O28oZTVLNC9SMqX3XEYql1CW5EFVOoRySlcbEDJRlz-mdAI8qYComFxKo1Wx-Gem__7M-iX5ClqoaEr_20jublFxV4lwLsE0xN_yLh-_IBGf79PGE2SNUy4kNmZOHu-v1maQUTN5k9SNNIBzI5QkE74A3c7pxkGPF5onSqK3FVXpOoi_MONPWwHcuO_RV4nuaNh7mibnHYXXTnNLtEe-Z0miIflDvmfX1-j731yKdURjJcsqh9d4XL9DnkAkqSHAw_TTHhuuHLzdbWyre81zIMgxmoem3O6nLeeVkFyGgmfkrCgyEdaR7_BsCa_VT9CWCuRhURrIyz_Fhm0jx8efsbkNvrttoNtALHmDWYPHkwZ6bR83Tr2I9XrF7g5mO9jbxs0TYb08dnawu4OZfTfruppFBnUGsciy4CgeRT74vRJftTkER4yx1_nxk4hMGjjFc1uIqR6kszU5SIjF-6CurcYqN2qof3vvit04TMcO1Hkf1bXVtsuNPBrGQ3A-KB-vijRj0I_j_VvjHqhj--tojyZaRDSIeVZCj-IxkHOLaX3PTWl9z09pgNOI67k9HZYoKrj8rlROg_reo1pVSbp2UhURN3AhOJ4w-XpV41tuL-tKGhq4rlM7ocELfaaBM3JP3IE_8J2hw5jnDAY9ukCW1z9hzqjPRj479YanPlv26K963_7J0D31-95g5HkDZ-i6Xo9CJPCI_dJ8y9SfNMv_AaBxqwM",alt:""})})}),"\n",(0,i.jsx)(n.h3,{id:"omnidragonvrfconsumer",children:"OmniDragonVRFConsumer"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"OmniDragonVRFConsumer"})," contract is the cornerstone of our randomness infrastructure. It:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Aggregates Multiple Sources"}),": Combines randomness from all supported drand networks plus Chainlink VRF"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Weighted Aggregation"}),": Assigns configurable weights to each source (default is 25% per source)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault Tolerance"}),": Continues to function even if one or more sources are temporarily unavailable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verifiable"}),": All randomness is cryptographically verifiable"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"randomness-buffer-design",children:"Randomness Buffer Design"}),"\n",(0,i.jsx)(n.p,{children:"A key security feature of OmniDragonVRFConsumer is the randomness buffer system:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://mermaid.live/edit#pako:eNqdVmuPojAU_StNJ8bZRF2h-IBsJplhnGQT3A3rrB923Q8VijZiIaXM6Ez871tAEFAyD5sgnnPu7bm1vekrdAKXQAO2Wq8LBgBlVBggfQWgLdZkS9oGaC9xRNqdMjrHnOKlT6J2IZeUFzAxoy9pjDIMd3mMpEJOt5jvzcAPeEJfeennXPFIduKkUpVknKvuAu4SftLd3SejpPMpIydanySjRAvCBa34eRgko50pDnmxnh88O2vMRaXOtdj6Fl4SPylf8JicEjsxf8rXjEalGZlc6FmIHcpWkh71TwzHbHNihv2jheRLPg6t1oIlY8VxuAaP9xkdxcsMWMDJfMqIAHex5xEOrpU-eMJ-TKIvC5jPAcBkrvxdwHlCAGUB_5UZtWDUGoMKBtUYTTK9Xq-GDk5z9AuKMDd7OXNux9TZvO3dbvRuN3q3G73bF73bH_VuEbyS2sADEyZ4EO7fKMJqLMJqLMJqLMK6WIT10SLMNaZMHpXNG-bNRvNmo3mz0bx50bz5LvPTyeOtlE2JwF15cNxgy0gUfVvyrzfXLpHHeisPfgQi4hNH0IB9KRJlz8l8JsNnKU1ccDw76ayF0q5qil1aVVlVlRVMagKzKjitdVWWPR--_7i1pPyBMuyD3yzkxKWOSHpsWtyvolbwMxZhLGrxybqAbvcmKbCG2GeIdYaYOZKvklJNJptEHUB1QKsDgyqQL65SdWUfU5cAVAe0OjCoAvk_olTLs46pSwCqA1odGFSB_L9UqutkHlOXAFQHtDowuLzWsxROd0CxAeuQdQ6Z59DxgIu9TzIYeNT3jStPH3Yi2aU2xLhCCB3fu8_UFWtDDXfluHRPZGGOTt4dlpSRRemO1xylVKPsT0VZn4oy3x0FO3DFqQsND_sR6cCtbCs4-Q3TO8ACpnegBTTkq4v5JmmVBxkUYvYnCLbQSO8EkAfxal0kiUMXC3JPsWy-2wLlsr8lF5mYCWioo0GaBBqvcAcNpT_sDZE2UocjHal9tS_ZPTSk495YH48VHY2Qjsbj4aEDX9J5-z2JaepIVzQNIU1XUAfKPiICPs3ueel17_AfL07Lhg",children:(0,i.jsx)(n.img,{src:"https://mermaid.ink/img/pako:eNqdVmuPojAU_StNJ8bZRF2h-IBsJplhnGQT3A3rrB923Q8VijZiIaXM6Ez871tAEFAyD5sgnnPu7bm1vekrdAKXQAO2Wq8LBgBlVBggfQWgLdZkS9oGaC9xRNqdMjrHnOKlT6J2IZeUFzAxoy9pjDIMd3mMpEJOt5jvzcAPeEJfeennXPFIduKkUpVknKvuAu4SftLd3SejpPMpIydanySjRAvCBa34eRgko50pDnmxnh88O2vMRaXOtdj6Fl4SPylf8JicEjsxf8rXjEalGZlc6FmIHcpWkh71TwzHbHNihv2jheRLPg6t1oIlY8VxuAaP9xkdxcsMWMDJfMqIAHex5xEOrpU-eMJ-TKIvC5jPAcBkrvxdwHlCAGUB_5UZtWDUGoMKBtUYTTK9Xq-GDk5z9AuKMDd7OXNux9TZvO3dbvRuN3q3G73bF73bH_VuEbyS2sADEyZ4EO7fKMJqLMJqLMJqLMK6WIT10SLMNaZMHpXNG-bNRvNmo3mz0bx50bz5LvPTyeOtlE2JwF15cNxgy0gUfVvyrzfXLpHHeisPfgQi4hNH0IB9KRJlz8l8JsNnKU1ccDw76ayF0q5qil1aVVlVlRVMagKzKjitdVWWPR--_7i1pPyBMuyD3yzkxKWOSHpsWtyvolbwMxZhLGrxybqAbvcmKbCG2GeIdYaYOZKvklJNJptEHUB1QKsDgyqQL65SdWUfU5cAVAe0OjCoAvk_olTLs46pSwCqA1odGFSB_L9UqutkHlOXAFQHtDowuLzWsxROd0CxAeuQdQ6Z59DxgIu9TzIYeNT3jStPH3Yi2aU2xLhCCB3fu8_UFWtDDXfluHRPZGGOTt4dlpSRRemO1xylVKPsT0VZn4oy3x0FO3DFqQsND_sR6cCtbCs4-Q3TO8ACpnegBTTkq4v5JmmVBxkUYvYnCLbQSO8EkAfxal0kiUMXC3JPsWy-2wLlsr8lF5mYCWioo0GaBBqvcAcNpT_sDZE2UocjHal9tS_ZPTSk495YH48VHY2Qjsbj4aEDX9J5-z2JaepIVzQNIU1XUAfKPiICPs3ueel17_AfL07Lhg?type=png",alt:""})})}),"\n",(0,i.jsx)(n.h4,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Buffering"}),": Each randomness source (EVMnet, Quicknet, League of Entropy, Chainlink) maintains a buffer of the 10 most recent randomness values"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Unpredictable Selection"}),": When randomness is requested:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'The system generates "meta-randomness" using a combination of block information and timestamp'}),"\n",(0,i.jsx)(n.li,{children:"This meta-randomness determines which value is selected from each buffer"}),"\n",(0,i.jsx)(n.li,{children:"The value selection process cannot be predicted in advance, even by block producers"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Aggregation"}),": After selecting values from each buffer, they are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Combined using a weighted function (25% contribution from each source)"}),"\n",(0,i.jsx)(n.li,{children:"Processed through a one-way hash function to create the final randomness value"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Enhanced Unpredictability"}),": This approach provides significantly stronger guarantees than using only the latest randomness values because:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Even if an attacker knows all current buffer values, they cannot predict which will be selected"}),"\n",(0,i.jsx)(n.li,{children:"The selection mechanism depends on future block data, making front-running difficult"}),"\n",(0,i.jsx)(n.li,{children:"Each source has 10 possible values, creating 10^4 = 10,000 possible combinations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"request-and-fulfillment-flow",children:"Request and Fulfillment Flow"}),"\n",(0,i.jsx)(n.p,{children:"The following sequence diagram illustrates how randomness is requested and fulfilled:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://mermaid.live/edit#pako:eNqVlGtvmzAUhv-K5SlKJ9GOSyAJmir1KlVqu63t-mHKFwcOxArY7GCaXpT_PhsSoEsqbbGEwed5j49fx36jkYyBhnQweJsJQrjgKiT1KyFDtYAchiEZzlkJQ6s_-siQs3kG5bDFdSiRQt3z11rjBMXzVqNDBfKc4cuZzCSa8Kek_u0SD_CsOsp1TNulTiXGgB13em5aj8u4gC48vTCtF1aAir-r59I3bdgQ6-1ik0yuogVD9W6dC5Vn12wOmVm-wgq6xFGFT1vPeNmbUWij7wsWcZHq8NjuIsjEsosE9qYE0-nHejCYCdNK-F2BiOCcsxRZ3lCFLo1HvGBCkZOiIKw0XcYjprgU5ExvCLJI7cLfcsENbfpzZKkUj3eXGi-rHHAXvxLKMXiL6gHQZSiJ5OBaXnzeK3E_lFw83ghQ-1Xeh6ofFY-W-3V3kLGXjVDEm897wCcegXHP8NqZw-Njs-KQoHGzVHcalrmAsjzYJDXhQ41puKWu4iZ2KxUQ-QRImiQP2ttluaUapnnW8-ssxreQ3MKKYDsTSVDmRJu2g7r70casHdrbT29N6pdjymiX_rOImV6HRlYSlz19y7r_wXr_yu638CRNEVKj6_ivc_xyvOJqQVbA04V6l6Den832JFWW8CzrbWK7YVYv3-e_p67F31FGxrSOoxZNkcc0TFhWgkX1SciZ-ab10Z_R-uqb0VC_xgyXM6qPpxbpP-AvKXMa1lcBRVmlizZJVbuyObTtKIKo769KKBq6zrhOQsM3-kxDZ-oeuYEf-M7E8byREwQWfdHUyD7ynKntTX1vPJqMfW9t0dd6Xvto4o59exRMPN-x7bHtWhRirs_MTXO917f8-g_9H-Yq",children:(0,i.jsx)(n.img,{src:"https://mermaid.ink/img/pako:eNqVlGtvmzAUhv-K5SlKJ9GOSyAJmir1KlVqu63t-mHKFwcOxArY7GCaXpT_PhsSoEsqbbGEwed5j49fx36jkYyBhnQweJsJQrjgKiT1KyFDtYAchiEZzlkJQ6s_-siQs3kG5bDFdSiRQt3z11rjBMXzVqNDBfKc4cuZzCSa8Kek_u0SD_CsOsp1TNulTiXGgB13em5aj8u4gC48vTCtF1aAir-r59I3bdgQ6-1ik0yuogVD9W6dC5Vn12wOmVm-wgq6xFGFT1vPeNmbUWij7wsWcZHq8NjuIsjEsosE9qYE0-nHejCYCdNK-F2BiOCcsxRZ3lCFLo1HvGBCkZOiIKw0XcYjprgU5ExvCLJI7cLfcsENbfpzZKkUj3eXGi-rHHAXvxLKMXiL6gHQZSiJ5OBaXnzeK3E_lFw83ghQ-1Xeh6ofFY-W-3V3kLGXjVDEm897wCcegXHP8NqZw-Njs-KQoHGzVHcalrmAsjzYJDXhQ41puKWu4iZ2KxUQ-QRImiQP2ttluaUapnnW8-ssxreQ3MKKYDsTSVDmRJu2g7r70casHdrbT29N6pdjymiX_rOImV6HRlYSlz19y7r_wXr_yu638CRNEVKj6_ivc_xyvOJqQVbA04V6l6Den832JFWW8CzrbWK7YVYv3-e_p67F31FGxrSOoxZNkcc0TFhWgkX1SciZ-ab10Z_R-uqb0VC_xgyXM6qPpxbpP-AvKXMa1lcBRVmlizZJVbuyObTtKIKo769KKBq6zrhOQsM3-kxDZ-oeuYEf-M7E8byREwQWfdHUyD7ynKntTX1vPJqMfW9t0dd6Xvto4o59exRMPN-x7bHtWhRirs_MTXO917f8-g_9H-Yq",alt:""})})}),"\n",(0,i.jsx)(n.h3,{id:"benefits-of-multi-source-randomness",children:"Benefits of Multi-Source Randomness"}),"\n",(0,i.jsx)(n.p,{children:"The security advantages of OmniDragon's multi-source approach compared to traditional single-source solutions:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://mermaid.live/edit#pako:eNqdVUtv4jAQ_iuWK8QFUB48mhxWaqHspWi1BOWwSQ8mMcTCsSPH2UIr_vtOQiFhYbUIWyLDzPfNjGf8-MSRjCl2cav1GQqEmGDaRZWIUFsnNKVtF7WXJKftTlPrE8XIktO8fYKDaSWF9thHxTGH2fbIAVOmWErUbiy5VKX5YVWNS8SCbnWNssxyXqKepYqpqnHPk3I2cJwJWpudl3I2zJoqzc7ymQ7K2T4g9sfFrrh8jxKi9Nk6E53yV7KkvFy-VgWtHUeF-n2sGcsbEQUU2stIxMQazCOjtigiNrVlaHylUH7gZ99qhSIUa0WyBC0mB2NeLA-KEC8UiZlmUhCOnrJMSRIlIT46R8gzAw88c4rmRMQyFTTPkScLFdG3GuWbgV9wQRVZMs707q3pAHW7XUA00ZVqagYLqSGut8s1TdGUMF6oo1sq4oNwkfKPVLCJImsprmY8g5RfKVkXFMkVehFayayZ0Myzghd_Jqg-U9rBz4JFm7_V_WCcECZgP2wa-lp6-h7U-fjz6ViKvEipugqeVcX4BqSzdK7o7Cu6_oWuUVIrGMsUipGynMaXDaoi96AN1vVFVK7nwVwui1w3Wv2PZugdbAhwuWKcu3AWHRidHCq9oe6DbdtfcvedxTpxzWzb5Pk1L4JxM29a84YwbuA12bNTuo5TJnxz2LJBdxLte4n9-4i-dV9lof_HeGXEm3nzRpr_oeEOXisWY3dFeE47GI5ISsr_uLoXQ1y9CyF2QYyJ2pQneg-kjIhfUqbYre5JrGSxTk5Oiiwmmk4YgashPWkV7Nbyci-Exq5l2JUT7H7iLXbNx37v0XFMw-ybtmEPzFEH7wD1aPaswWjojAzDGcF3uO_gjyqu0RuBqj80DNscGI4N7cAUrkypZoe3r3oC938ALkUWmQ",children:(0,i.jsx)(n.img,{src:"https://mermaid.ink/img/pako:eNqdVUtv4jAQ_iuWK8QFUB48mhxWaqHspWi1BOWwSQ8mMcTCsSPH2UIr_vtOQiFhYbUIWyLDzPfNjGf8-MSRjCl2cav1GQqEmGDaRZWIUFsnNKVtF7WXJKftTlPrE8XIktO8fYKDaSWF9thHxTGH2fbIAVOmWErUbiy5VKX5YVWNS8SCbnWNssxyXqKepYqpqnHPk3I2cJwJWpudl3I2zJoqzc7ymQ7K2T4g9sfFrrh8jxKi9Nk6E53yV7KkvFy-VgWtHUeF-n2sGcsbEQUU2stIxMQazCOjtigiNrVlaHylUH7gZ99qhSIUa0WyBC0mB2NeLA-KEC8UiZlmUhCOnrJMSRIlIT46R8gzAw88c4rmRMQyFTTPkScLFdG3GuWbgV9wQRVZMs707q3pAHW7XUA00ZVqagYLqSGut8s1TdGUMF6oo1sq4oNwkfKPVLCJImsprmY8g5RfKVkXFMkVehFayayZ0Myzghd_Jqg-U9rBz4JFm7_V_WCcECZgP2wa-lp6-h7U-fjz6ViKvEipugqeVcX4BqSzdK7o7Cu6_oWuUVIrGMsUipGynMaXDaoi96AN1vVFVK7nwVwui1w3Wv2PZugdbAhwuWKcu3AWHRidHCq9oe6DbdtfcvedxTpxzWzb5Pk1L4JxM29a84YwbuA12bNTuo5TJnxz2LJBdxLte4n9-4i-dV9lof_HeGXEm3nzRpr_oeEOXisWY3dFeE47GI5ISsr_uLoXQ1y9CyF2QYyJ2pQneg-kjIhfUqbYre5JrGSxTk5Oiiwmmk4YgashPWkV7Nbyci-Exq5l2JUT7H7iLXbNx37v0XFMw-ybtmEPzFEH7wD1aPaswWjojAzDGcF3uO_gjyqu0RuBqj80DNscGI4N7cAUrkypZoe3r3oC938ALkUWmQ",alt:""})})}),"\n",(0,i.jsx)(n.p,{children:"Key benefits:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enhanced Security"}),": No single point of failure in randomness generation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Manipulation Resistance"}),": An attacker would need to compromise multiple independent networks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network Diversity"}),": Different cryptographic schemes and node operators across networks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Blockchain Compatibility"}),": By including EVMnet, ensures efficient on-chain verification"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unpredictable Source Selection"}),": The buffering and selection mechanism adds another layer of security"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"integration-architecture",children:"Integration Architecture"}),"\n",(0,i.jsx)(n.p,{children:"The drand integration in OmniDragon follows a multi-layered architecture:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Drand Network  \u2502\u2500\u2500\u2500\u2500\u25b6\u2502 drand-relay-api \u2502\u2500\u2500\u2500\u2500\u25b6\u2502   Integration   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                         \u2502\n                                                         \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Applications   \u2502\u25c0\u2500\u2500\u2500\u2500\u2502   Consumers     \u2502\u25c0\u2500\u2500\u2500\u2500\u2502   Verifier      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(n.p,{children:"Components:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration Layer"}),": Receives randomness from the relay and validates it"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verifier"}),": Verifies the signatures from drand"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consumers"}),": Smart contracts that need randomness"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Applications"}),": Higher-level applications using randomness"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage-in-smart-contracts",children:"Usage in Smart Contracts"}),"\n",(0,i.jsx)(n.h3,{id:"basic-usage-with-single-source",children:"Basic Usage with Single Source"}),"\n",(0,i.jsx)(n.p,{children:"To use drand randomness from a single source in a smart contract:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'// Import the DragonVRFConsumer\nimport "../drand/DragonVRFConsumer.sol";\n\ncontract MyRandomApp is DragonVRFConsumer {\n    // Request ID tracking\n    uint256 private requestId;\n    \n    // Constructor\n    constructor(address _vrfIntegrator) DragonVRFConsumer(_vrfIntegrator) {}\n    \n    // Request randomness\n    function getRandomNumber() external {\n        requestId = requestRandomness();\n    }\n    \n    // Receive randomness\n    function _fulfillRandomness(uint256 _requestId, uint256 _randomness) internal override {\n        // Use randomness here\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-usage-with-omnidragonvrfconsumer",children:"Advanced Usage with OmniDragonVRFConsumer"}),"\n",(0,i.jsx)(n.p,{children:"For applications requiring maximum security, use the OmniDragonVRFConsumer:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'// Import the OmniDragonVRFConsumer interface\nimport "../drand/interfaces/IOmniDragonVRFConsumer.sol";\n\ncontract SecureRandomApp {\n    // OmniDragonVRFConsumer reference\n    IOmniDragonVRFConsumer public omniConsumer;\n    \n    // Request tracking\n    mapping(uint256 => bool) public pendingRequests;\n    uint256 public lastRandomValue;\n    \n    // Events\n    event RandomnessRequested(uint256 requestId);\n    event RandomnessReceived(uint256 requestId, uint256 randomValue);\n    \n    // Constructor\n    constructor(address _omniConsumer) {\n        omniConsumer = IOmniDragonVRFConsumer(_omniConsumer);\n    }\n    \n    // Request aggregated randomness\n    function getSecureRandomNumber() external {\n        uint256 requestId = omniConsumer.requestRandomness(address(this));\n        pendingRequests[requestId] = true;\n        emit RandomnessRequested(requestId);\n    }\n    \n    // Callback function for randomness fulfillment\n    function fulfillRandomness(uint256 _requestId, uint256 _randomness) external {\n        require(msg.sender == address(omniConsumer), "Only OmniConsumer can fulfill");\n        require(pendingRequests[_requestId], "Request not found");\n        \n        lastRandomValue = _randomness;\n        delete pendingRequests[_requestId];\n        \n        emit RandomnessReceived(_requestId, _randomness);\n        \n        // Use randomness here\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,i.jsx)(n.p,{children:"The drand integration uses the following components:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DragonVRFIntegrator.sol"})," - Receives and distributes randomness from a single drand network"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DragonVRFConsumer.sol"})," - Base contract for consuming randomness from a single source"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"OmniDragonVRFConsumer.sol"})," - Advanced consumer that aggregates randomness from multiple sources"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"drand-relay-verifier"})," - Service that verifies and relays drand randomness"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Randomness is public and known to anyone once published"}),"\n",(0,i.jsx)(n.li,{children:"There is a small delay between randomness generation and availability"}),"\n",(0,i.jsx)(n.li,{children:"Consumers must protect against front-running attacks"}),"\n",(0,i.jsx)(n.li,{children:"Using multiple sources (as OmniDragonVRFConsumer does) significantly enhances security"}),"\n",(0,i.jsx)(n.li,{children:"Even with multiple sources, randomness should not be used for high-value secret generation without additional safeguards"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://leagueofentropy.com/",children:"League of Entropy"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://drand.love/docs/",children:"drand Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.chain.link/docs/chainlink-vrf/",children:"Randomness in Smart Contracts"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);